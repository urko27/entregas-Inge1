

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (23 November 2023 17:26:38) as /home/clinux01/Descargas/linux64/linux64/CuisUniversity-5981.image!


----End fileIn of /home/clinux01/Descargas/linux64/linux64/CustomerImporter-3.st----!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:32:32'!
CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 17:31:29'!
test01SupplierRecordIsImportedCorrectly

	|stream|

	stream := ReadStream on: 'S, supplier1, D,123'.
	SupplierImporter valueFrom: stream into: system.! !
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 17:35:12' prior: 50651364!
test01SupplierRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 'S, supplier1, D,123'.
	SupplierImporter valueFrom: stream into: system.
	
	self assert: system numberOfSuppliers equals: 1.
	supplier := system supplierWithIdentificationType:'D'  number: 123.
	self assert: (supplier isNamed: 'supplier1').
	self assert: (supplier isIdentifiedAs: 'D' number: '123').
	self assert: supplier addressIsEmpty.
	self assert: supplier customerIsEMpty.! !

self makeCurrent!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:36:33'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 17:36:34'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 17:36:34'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 17:36:34'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 17:36:34'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 17:36:34'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 17:36:35'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 17:36:35'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 17:36:35'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 17:36:35'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:36:35'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:36:39'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:36:39'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:37:04'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:37:04'!
ERROR!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 17:40:32'!
Object subclass: #Supplier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'no messages' stamp: 'h 11/23/2023 17:40:25' overrides: 50650858!
importRecord

	system addSupplier: (Supplier named: record second identificationType: 'D' number: '123').! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:40:54'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 17:40:54'!
ERROR!
!Supplier class methodsFor: 'instance creation' stamp: 'h 11/23/2023 17:41:03'!
named: aRenameMe1 identificationType: aRenameMe2 number: aRenameMe3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aRenameMe1 identificationType: aRenameMe2 number: aRenameMe3 ! !
!Supplier class methodsFor: 'instance creation' stamp: 'h 11/23/2023 17:41:59' prior: 50651462!
named: aName identificationType: type number: number 
	
	^self new initializeNamed: aName identificationType: type number: number .! !

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 17:42:18'!
Object subclass: #Supplier
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 17:42:18'!
Object subclass: #Supplier
	instanceVariableNames: 'name type_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 17:42:18'!
Object subclass: #Supplier
	instanceVariableNames: 'name type_CHANGE_ME number_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Supplier methodsFor: 'initialize' stamp: 'h 11/23/2023 17:42:18'!
initializeNamed: aName identificationType: type number: number 
	self shouldBeImplemented.
	name := aName.
	type_CHANGE_ME := type.
	number_CHANGE_ME := number.! !
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 17:45:55' prior: 50651372!
test01SupplierRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 'S, supplier1, D,123'.
	SupplierImporter valueFrom: stream into: system.
	
	self assert: system numberOfSuppliers equals: 1.
	supplier := system supplierWithIdentificationType:'D'  number: 123.
	self assert: (supplier isNamed: 'supplier1').
	self assert: (supplier isIdentifiedAs: 'D' number: '123').
	self assert: supplier isAddressesEmpty .
	self assert: supplier isCustomersEmpty.! !

!classRenamed: #CustomerSystem as: #ErpSystem stamp: 'h 11/23/2023 17:47:48'!
Smalltalk renameClassNamed: #CustomerSystem as: #ErpSystem!

!classRenamed: #PersistentCustomerSystem as: #PersistentErpSystem stamp: 'h 11/23/2023 17:47:55'!
Smalltalk renameClassNamed: #PersistentCustomerSystem as: #PersistentErpSystem!
!IntegrationEnvironment methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 17:47:55' prior: 50651329 overrides: 50651227!
createCustomerSystem

	^PersistentErpSystem new! !

!classRenamed: #TransientCustomerSystem as: #TransientErpSystem stamp: 'h 11/23/2023 17:48:07'!
Smalltalk renameClassNamed: #TransientCustomerSystem as: #TransientErpSystem!
!DevelopmentEnvironment methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 17:48:07' prior: 50651291 overrides: 50651227!
createCustomerSystem

	^TransientErpSystem new! !

Object subclass: #CsvImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:02'!
Object subclass: #CsvImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line record system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:10'!
CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line record system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

CsvImporter subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:15'!
CsvImporter subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:44'!
CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer record system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:44'!
Object subclass: #CsvImporter
	instanceVariableNames: 'line'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:49'!
CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:49'!
Object subclass: #CsvImporter
	instanceVariableNames: 'line system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:59'!
CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:49:59'!
Object subclass: #CsvImporter
	instanceVariableNames: 'line system readStream'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:50:06'!
CsvImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 17:50:06'!
Object subclass: #CsvImporter
	instanceVariableNames: 'line system readStream record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvImporter methodsFor: 'initialization' stamp: 'h 11/23/2023 17:50:37'!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	system := aCustomerSystem ! !

!methodRemoval: CustomerImporter #initializeFrom:into: stamp: 'h 11/23/2023 17:50:37'!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	system := aCustomerSystem !
!CsvImporter methodsFor: 'evaluating' stamp: 'h 11/23/2023 17:50:42' overrides: 16902254!
value

	[ self hasLineToImport ] whileTrue: [
		self createRecord.
		self importRecord ].

	! !

!methodRemoval: CustomerImporter #value stamp: 'h 11/23/2023 17:50:42'!
value

	[ self hasLineToImport ] whileTrue: [
		self createRecord.
		self importRecord ].

	!
!CsvImporter methodsFor: 'evaluating - private' stamp: 'h 11/23/2023 17:51:25'!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]! !

!methodRemoval: CustomerImporter #assertRecordNotEmpty stamp: 'h 11/23/2023 17:51:25'!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]!
!CsvImporter methodsFor: 'evaluating - private' stamp: 'h 11/23/2023 17:51:29'!
createRecord

	^ record := line findTokens: $,! !

!methodRemoval: CustomerImporter #createRecord stamp: 'h 11/23/2023 17:51:29'!
createRecord

	^ record := line findTokens: $,!
!CsvImporter methodsFor: 'evaluating - private' stamp: 'h 11/23/2023 17:51:32'!
hasLineToImport

	line := readStream nextLine.
	^line notNil! !

!methodRemoval: CustomerImporter #hasLineToImport stamp: 'h 11/23/2023 17:51:32'!
hasLineToImport

	line := readStream nextLine.
	^line notNil!
!CsvImporter methodsFor: 'evaluating - private' stamp: 'h 11/23/2023 17:51:45'!
importRecord

	self subclassResponsibility! !
!CsvImporter class methodsFor: 'instance creation' stamp: 'h 11/23/2023 17:52:04'!
from: aReadStream into: aCustomerSystem

	^self new initializeFrom: aReadStream into: aCustomerSystem! !

!methodRemoval: CustomerImporter class #from:into: stamp: 'h 11/23/2023 17:52:04'!
from: aReadStream into: aCustomerSystem

	^self new initializeFrom: aReadStream into: aCustomerSystem!
!CsvImporter class methodsFor: 'importing' stamp: 'h 11/23/2023 17:52:10'!
valueFrom: aReadStream into: aCustomerSystem

	^(self from: aReadStream into: aCustomerSystem) value! !

!methodRemoval: CustomerImporter class #valueFrom:into: stamp: 'h 11/23/2023 17:52:10'!
valueFrom: aReadStream into: aCustomerSystem

	^(self from: aReadStream into: aCustomerSystem) value!
!CsvImporter class methodsFor: 'error messages' stamp: 'h 11/23/2023 17:52:24'!
invalidRecordTypeErrorDescription

	^'Invalid record type'! !

!methodRemoval: CustomerImporter class #invalidRecordTypeErrorDescription stamp: 'h 11/23/2023 17:52:24'!
invalidRecordTypeErrorDescription

	^'Invalid record type'!

CsvImporter subclass: #XXImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #XXImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 18:01:30'!
CsvImporter subclass: #XXImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

XXImporter subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 18:01:36'!
XXImporter subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

XXImporter subclass: #CustomerImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 18:01:48'!
XXImporter subclass: #CustomerImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

CsvImporter subclass: #XXImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #XXImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 18:01:54'!
CsvImporter subclass: #XXImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 18:01:57'!
XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!XXImporter methodsFor: 'address' stamp: 'h 11/23/2023 18:02:52'!
isAddressRecord

	^ record first = 'A'! !

!methodRemoval: CustomerImporter #isAddressRecord stamp: 'h 11/23/2023 18:02:52'!
isAddressRecord

	^ record first = 'A'!
!XXImporter methodsFor: 'address' stamp: 'h 11/23/2023 18:03:42'!
assertValidAddressRecord

	^ record size ~= 6 ifTrue: [ self error: self class invalidAddressRecordErrorDescription ]! !

!methodRemoval: CustomerImporter #assertValidAddressRecord stamp: 'h 11/23/2023 18:03:42'!
assertValidAddressRecord

	^ record size ~= 6 ifTrue: [ self error: self class invalidAddressRecordErrorDescription ]!

Object subclass: #Party
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:07:33'!
Object subclass: #Party
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Party subclass: #Supplier
	instanceVariableNames: 'name type_CHANGE_ME number_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 18:07:41'!
Party subclass: #Supplier
	instanceVariableNames: 'name type_CHANGE_ME number_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Party subclass: #Customer
	instanceVariableNames: 'id firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:07:49'!
Party subclass: #Customer
	instanceVariableNames: 'id firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:12'!
Party subclass: #Customer
	instanceVariableNames: 'id firstName lastName identificationType identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:12'!
Object subclass: #Party
	instanceVariableNames: 'addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:20'!
Party subclass: #Customer
	instanceVariableNames: 'id firstName lastName identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:20'!
Object subclass: #Party
	instanceVariableNames: 'addresses identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:27'!
Party subclass: #Customer
	instanceVariableNames: 'id firstName lastName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:27'!
Object subclass: #Party
	instanceVariableNames: 'addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:34'!
Party subclass: #Customer
	instanceVariableNames: 'firstName lastName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:34'!
Object subclass: #Party
	instanceVariableNames: 'addresses identificationNumber identificationType id'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Object subclass: #Party
	instanceVariableNames: 'addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:46'!
Object subclass: #Party
	instanceVariableNames: 'addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Party subclass: #Customer
	instanceVariableNames: 'firstName lastName id'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'h 11/23/2023 18:08:51'!
Party subclass: #Customer
	instanceVariableNames: 'firstName lastName id'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Party methodsFor: 'addresses' stamp: 'h 11/23/2023 18:09:03'!
isAddressesEmpty

	^addresses isEmpty ! !

!methodRemoval: Customer #isAddressesEmpty stamp: 'h 11/23/2023 18:09:03'!
isAddressesEmpty

	^addresses isEmpty !
!Party methodsFor: 'addresses' stamp: 'h 11/23/2023 18:09:06'!
addresses

	^ addresses! !

!methodRemoval: Customer #addresses stamp: 'h 11/23/2023 18:09:06'!
addresses

	^ addresses!
!Party methodsFor: 'addresses' stamp: 'h 11/23/2023 18:09:20'!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock ! !

!methodRemoval: Customer #addressAt:ifNone: stamp: 'h 11/23/2023 18:09:20'!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock !
!Party methodsFor: 'addresses' stamp: 'h 11/23/2023 18:09:23'!
addAddress: anAddress

	addresses add: anAddress ! !

!methodRemoval: Customer #addAddress: stamp: 'h 11/23/2023 18:09:23'!
addAddress: anAddress

	addresses add: anAddress !
!Party methodsFor: 'initialization' stamp: 'h 11/23/2023 18:12:12' overrides: 16920235!
initialize

	super initialize.
	addresses := OrderedCollection new.! !

!methodRemoval: Customer #initialize stamp: 'h 11/23/2023 18:12:12'!
initialize

	super initialize.
	addresses := OrderedCollection new.!
!Party methodsFor: 'identification' stamp: 'h 11/23/2023 18:12:16'!
identificationType

	^identificationType ! !

!methodRemoval: Customer #identificationType stamp: 'h 11/23/2023 18:12:16'!
identificationType

	^identificationType !
!Party methodsFor: 'identification' stamp: 'h 11/23/2023 18:12:19'!
identificationType: anIdentificationType

	identificationType := anIdentificationType! !

!methodRemoval: Customer #identificationType: stamp: 'h 11/23/2023 18:12:19'!
identificationType: anIdentificationType

	identificationType := anIdentificationType!
!Party methodsFor: 'identification' stamp: 'h 11/23/2023 18:12:23'!
identificationNumber: anIdentificationNumber

	identificationNumber := anIdentificationNumber! !

!methodRemoval: Customer #identificationNumber: stamp: 'h 11/23/2023 18:12:23'!
identificationNumber: anIdentificationNumber

	identificationNumber := anIdentificationNumber!
!Party methodsFor: 'identification' stamp: 'h 11/23/2023 18:12:27'!
identificationNumber

	^identificationNumber ! !

!methodRemoval: Customer #identificationNumber stamp: 'h 11/23/2023 18:12:27'!
identificationNumber

	^identificationNumber !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:13:55'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:13:55'!
ERROR!
!Supplier methodsFor: 'initialize' stamp: 'h 11/23/2023 18:17:42' prior: 50651503!
initializeNamed: aName identificationType: type number: number 
	self shouldBeImplemented.
	name := aName.
	identificationType = type.
	identificationNumber := number.! !
!Supplier methodsFor: 'initialize' stamp: 'h 11/23/2023 18:17:44' prior: 50652055!
initializeNamed: aName identificationType: type number: number 
	
	name := aName.
	identificationType = type.
	identificationNumber := number.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:17:49'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:17:49'!
ERROR!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 18:19:17' prior: 50651449 overrides: 50651713!
importRecord

	system add: (Supplier named: record second identificationType: 'D' number: '123').! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:19:18'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 18:19:19'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 18:19:19'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 18:19:19'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 18:19:19'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 18:19:20'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 18:19:20'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 18:19:20'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 18:19:20'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 18:19:20'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:19:20'!
ERROR!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

self makeCurrent!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:20:38'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:20:38'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:24:17'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:24:17'!
ERROR!
!PersistentErpSystem methodsFor: 'customers' stamp: 'h 11/23/2023 18:24:40'!
numberOfSuppliers

	^(session selectAllOfType: Supplier) size! !
!TransientErpSystem methodsFor: 'customers' stamp: 'h 11/23/2023 18:24:53'!
numberOfSuppliers

	^(customers selectAllOfType: Supplier) size! !
!ErpSystem methodsFor: 'customers' stamp: 'h 11/23/2023 18:25:00'!
numberOfSuppliers

	self subclassResponsibility ! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:25:03'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 18:25:03'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:25:03'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:25:06'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:25:06'!
ERROR!

!classDefinition: #TransientErpSystem category: 'CustomerImporter' stamp: 'h 11/23/2023 18:26:35'!
ErpSystem subclass: #TransientErpSystem
	instanceVariableNames: 'customers suppliers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!TransientErpSystem methodsFor: 'customers' stamp: 'h 11/23/2023 18:26:32'!
addSupplier: aSupplier

	suppliers add: aSupplier ! !
!TransientErpSystem methodsFor: 'customers' stamp: 'h 11/23/2023 18:26:50' prior: 50652147 overrides: 50652152!
numberOfSuppliers

	^suppliers size! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 18:28:05' prior: 50652078 overrides: 50651713!
importRecord

	system addSupplier: (Supplier named: record second identificationType: 'D' number: '123').! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:28:09'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:28:09'!
ERROR!
!TransientErpSystem methodsFor: 'system lifecycle' stamp: 'h 11/23/2023 18:28:35' prior: 50651022 overrides: 50650943!
start

	customers := OrderedCollection new.
	suppliers := OrderedCollection new.! !
!TransientErpSystem methodsFor: 'system lifecycle' stamp: 'h 11/23/2023 18:28:54' prior: 50651027 overrides: 50650947!
stop

	customers := nil.
	suppliers := nil.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:29:04'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:29:04'!
ERROR!
!TransientErpSystem methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 18:29:44'!
supplierWithIdentificationType: aRenameMe1 number: aRenameMe2 
	self shouldBeImplemented.! !

!methodRemoval: TransientErpSystem #supplierWithIdentificationType:number: stamp: 'h 11/23/2023 18:29:56'!
supplierWithIdentificationType: aRenameMe1 number: aRenameMe2 
	self shouldBeImplemented.!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:29:59'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:29:59'!
ERROR!
!TransientErpSystem methodsFor: 'suppliers' stamp: 'h 11/23/2023 18:30:06'!
supplierWithIdentificationType: aRenameMe1 number: aRenameMe2 
	self shouldBeImplemented.! !
!TransientErpSystem methodsFor: 'suppliers' stamp: 'h 11/23/2023 18:32:37' prior: 50652270!
supplierWithIdentificationType: type number: number
	
	^suppliers detect: [ :aSupplier | aSupplier isIdentifiedAs: type number: number]! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:32:40'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:32:40'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:32:53'!
isIdentifiedAs: type number: number 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:33:14' prior: 50652289!
isIdentifiedAs: type number: number 
	
	identificationNumber = number and: [identificationType = type].! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:33:17' prior: 50652294!
isIdentifiedAs: type number: number 
	
	^identificationNumber = number and: [identificationType = type].! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:33:19'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:33:19'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:33:35'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:33:35'!
ERROR!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 18:35:07' prior: 50652220 overrides: 50651713!
importRecord

	system addSupplier: (Supplier named: record second identificationType: record third number: record fourth).! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:35:13'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:35:13'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:35:42'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:35:42'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:36:48'!
ERROR!

suppliers!

self first!
!Supplier methodsFor: 'initialize' stamp: 'h 11/23/2023 18:38:16' prior: 50652063!
initializeNamed: aName identificationType: type number: number 
	
	name := aName.
	identificationType := type.
	identificationNumber := number.! !

Party subclass: #Supplier
	instanceVariableNames: 'name '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 18:38:23'!
Party subclass: #Supplier
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

suppliers!

self first!
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 18:40:41' prior: 50651511!
test01SupplierRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 'S,supplier1,D,123'.
	SupplierImporter valueFrom: stream into: system.
	
	self assert: system numberOfSuppliers equals: 1.
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier isNamed: 'supplier1').
	self assert: (supplier isIdentifiedAs: 'D' number: '123').
	self assert: supplier isAddressesEmpty .
	self assert: supplier isCustomersEmpty.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:40:42'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:40:42'!
ERROR!

suppliers !

self first!

identificationNumber!

number!

identificationNumber !

type!

identificationType!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:42:35' prior: 50652300!
isIdentifiedAs: type number: number 
	
	^identificationNumber = number asString and: [identificationType = type].! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:42:37'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:42:37'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:42:44'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:42:44'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:42:48'!
isNamed: aRenameMe1 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:43:35' prior: 50652411!
isNamed: aName
	
	name := aName .! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:43:38' prior: 50652415!
isNamed: aName
	
	^name := aName .! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:43:41'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:43:41'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:43:58' prior: 50652419!
isNamed: aName
	
	^name = aName .! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:44:00'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:44:00'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:44:06'!
isCustomersEmpty
	self shouldBeImplemented.! !

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'h 11/23/2023 18:44:19'!
Party subclass: #Supplier
	instanceVariableNames: 'name customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:44:18' prior: 50652440!
isCustomersEmpty
	
	customers isEmpty! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:44:22' prior: 50652452!
isCustomersEmpty
	
	^customers isEmpty! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:44:24'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:44:24'!
ERROR!
!Supplier methodsFor: 'initialize' stamp: 'h 11/23/2023 18:44:38' prior: 50652344!
initializeNamed: aName identificationType: type number: number 
	
	name := aName.
	identificationType := type.
	identificationNumber := number.
	customers := OrderedCollection new.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:44:42'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 18:52:58'!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	self assert: system numberOfSuppliers equals: 1.
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier isNamed: 'supplier1').
	self assert: (supplier isIdentifiedAs: 'D' number: '123').
	self assert: supplier isAddressesEmpty .
	self assert: (supplier customerCountIs: 1).
	self assert: (supplier hasCustomerFirstNamed: 'Pepe' lastName: 'Sanchez' withType: 'D' andNumber: 22333444).! !
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 18:53:53' prior: 50652479!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	self assert: (supplier hasCustomerFirstNamed: 'Pepe' lastName: 'Sanchez' withType: 'D' andNumber: 22333444).! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:53:54'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:53:54'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:53:59'!
customerCountIs: aRenameMe1 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 18:54:19' prior: 50652525!
customerCountIs: count
	
	^customers size = count! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:54:21'!
FAILURE!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:54:21'!
FAILURE!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:54:24'!
FAILURE!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 18:54:24'!
FAILURE!

----SNAPSHOT----(23 November 2023 18:55:40) CuisUniversity-5981.image priorSource: 10197292!

----QUIT----(23 November 2023 18:55:42) CuisUniversity-5981.image priorSource: 10268728!

----STARTUP---- (23 November 2023 18:56:34) as /home/clinux01/Descargas/linux64/linux64/CuisUniversity-5981.image!


Object subclass: #CsvCustomerMapper
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvCustomerMapper category: 'CustomerImporter' stamp: 'h 11/23/2023 19:07:41'!
Object subclass: #CsvCustomerMapper
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CustomerImporter methodsFor: 'customer' stamp: 'h 11/23/2023 19:08:16' prior: 50650793!
importCustomer
	^CsvCustomerMapper mapFrom: record.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:08:29'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:08:30'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 19:08:55'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 19:08:55'!
ERROR!

!classDefinition: #CsvCustomerMapper category: 'CustomerImporter' stamp: 'h 11/23/2023 19:10:07'!
Object subclass: #CsvCustomerMapper
	instanceVariableNames: 'record newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvCustomerMapper methodsFor: 'no messages' stamp: 'h 11/23/2023 19:10:05'!
mapFrom: aRecord


	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !

Object subclass: #CsvCustomerMapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvCustomerMapper category: 'CustomerImporter' stamp: 'h 11/23/2023 19:10:18'!
Object subclass: #CsvCustomerMapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:10:28' prior: 50652596!
mapFrom: record


	| newCustomer |
	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:10:33' prior: 50652620!
mapFrom: record
	| newCustomer |
	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 19:11:15'!
XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer customerMapper'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CustomerImporter methodsFor: 'customer' stamp: 'h 11/23/2023 19:11:13' prior: 50652571!
importCustomer
	newCustomer := customerMapper mapFrom: record.
	system add: newCustomer.! !
!CsvImporter methodsFor: 'initialization' stamp: 'h 11/23/2023 19:12:00' prior: 50651657!
initializeFrom: aReadStream into: aCustomerSystem

	| customerMapper |
	readStream := aReadStream.
	system := aCustomerSystem .
	customerMapper := CsvCustomerMapper new.! !

XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 19:12:13'!
XXImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvImporter methodsFor: 'initialization' stamp: 'h 11/23/2023 19:12:35' prior: 50652660!
initializeFrom: aReadStream into: aCustomerSystem

	| customerMapper |
	readStream := aReadStream.
	system := aCustomerSystem .
	customerMapper := CsvCustomerMapper new.! !
!CustomerImporter methodsFor: 'customer' stamp: 'h 11/23/2023 19:13:08' prior: 50652654!
importCustomer
	newCustomer := super mapFrom: record.
	system add: newCustomer.! !

Object subclass: #CsvImporter
	instanceVariableNames: 'line system readStream record csvCustomerMapper'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 19:13:26'!
Object subclass: #CsvImporter
	instanceVariableNames: 'line system readStream record csvCustomerMapper'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvImporter methodsFor: 'initialization' stamp: 'h 11/23/2023 19:13:33' prior: 50652681!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	system := aCustomerSystem .
	csvCustomerMapper := CsvCustomerMapper new.! !
!CustomerImporter methodsFor: 'customer' stamp: 'h 11/23/2023 19:13:42' prior: 50652690!
importCustomer
	newCustomer := csvCustomerMapper mapFrom: record.
	system add: newCustomer.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:13:50'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:13:53'!
PASSED!
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:15:33' prior: 50652633!
mapFrom: record
	| newCustomer |
	
	self assertValidCustomerRecord: record.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !
!CsvCustomerMapper methodsFor: 'assert' stamp: 'h 11/23/2023 19:16:05'!
assertValidCustomerRecord: record

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]! !

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 19:16:20'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 19:16:21'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:16:23'!
FAILURE!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 19:16:23'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 19:16:23'!
ERROR!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 19:16:23'!
ERROR!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 19:16:23'!
PASSED!
!CsvCustomerMapper methodsFor: 'assert' stamp: 'h 11/23/2023 19:17:09' prior: 50652743!
assertValidCustomerRecord: record

	^ record size ~= 5 ifTrue: [ self error: self invalidCustomerRecordErrorDescription ]! !
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:18:07'!
invalidCustomerRecordErrorDescription

	^'Invalid Customer record'! !

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 19:18:11'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:18:14'!
PASSED!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:18:14'!
FAILURE!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:18:14'!
FAILURE!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'h 11/23/2023 19:25:52'!
XXImporter subclass: #SupplierImporter
	instanceVariableNames: 'newSupplier'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:25:46' prior: 50652320 overrides: 50651713!
importRecord

	record first = 'S' ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier].
	
	record first = 'NC' ifTrue: [newSupplier add: (csvCustomerMapper mapFrom: record)]! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:25:59'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:25:59'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 19:26:39'!
addCustomer: customer
	
	customers add: customer ! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:26:45' prior: 50652858 overrides: 50651713!
importRecord

	record first = 'S' ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier].
	
	record first = 'NC' ifTrue: [newSupplier addCustomer: (csvCustomerMapper mapFrom: record)]! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:26:50'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:26:50'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 19:27:00'!
hasCustomerFirstNamed: aRenameMe1 lastName: aRenameMe2 withType: aRenameMe3 andNumber: aRenameMe4 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 19:27:34' prior: 50652900!
hasCustomerFirstNamed: firstName lastName: lastName withType: type andNumber: number

	
	
	! !
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 19:30:41' prior: 50652907!
hasCustomerFirstNamed: firstName lastName: lastName withType: type andNumber: number

	customers anySatisfy: [:aCustomer | aCustomer isFirstNamed: firstName lastName: lastName withType: type andNumber: number]
	
	! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:30:48'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:30:48'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 19:59:18' prior: 50652913!
hasCustomerFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number

	customers anySatisfy: [:aCustomer | aCustomer isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number]
	
	! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:59:22'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 19:59:22'!
ERROR!
!Customer methodsFor: 'tests' stamp: 'h 11/23/2023 19:59:33'!
isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number 
	self shouldBeImplemented.! !
!Customer methodsFor: 'tests' stamp: 'h 11/23/2023 20:02:09' prior: 50652946!
isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number 
	
	^firstName = aFirstName and: [aLastName = lastName and: [type = identificationType and: [identificationNumber = number]]]! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:05:06'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:05:06'!
ERROR!
!Supplier methodsFor: 'test' stamp: 'h 11/23/2023 20:05:23' prior: 50652930!
hasCustomerFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number

	^customers anySatisfy: [:aCustomer | aCustomer isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number]
	
	! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:05:24'!
FAILURE!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:05:24'!
FAILURE!

customers!

self first!

aCustomer!

aFirstName!

number!

identificationNumber!
!Customer methodsFor: 'tests' stamp: 'h 11/23/2023 20:07:35' prior: 50652952!
isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number 
	
	^firstName = aFirstName and: [aLastName = lastName and: [type = identificationType and: [identificationNumber = number asString]]]! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:07:38'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'h 11/23/2023 20:07:46'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'h 11/23/2023 20:07:46'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 20:12:58' prior: 50652502!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	self assertNewCustomerIsImported.! !
!ImportTest methodsFor: 'supplier tests' stamp: 'h 11/23/2023 20:22:18' prior: 50653032!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:22:20'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:22:20'!
ERROR!
!Supplier methodsFor: 'customer' stamp: 'h 11/23/2023 20:22:27'!
customerWithIdType: aRenameMe1 andIdNumber: aRenameMe2 
	self shouldBeImplemented.! !

!methodRemoval: Customer #isFirstNamed:lastName:withType:andNumber: stamp: 'h 11/23/2023 20:23:08'!
isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number 
	
	^firstName = aFirstName and: [aLastName = lastName and: [type = identificationType and: [identificationNumber = number asString]]]!
!Supplier methodsFor: 'customer' stamp: 'h 11/23/2023 20:23:40' prior: 50653071!
customerWithIdType: type andIdNumber: number
	
	customers detect: [:aCustomer | aCustomer identificationType = type and: [aCustomer identificationNumber = number]]! !
!Supplier methodsFor: 'customer' stamp: 'h 11/23/2023 20:23:43' prior: 50653087!
customerWithIdType: type andIdNumber: number
	
	^customers detect: [:aCustomer | aCustomer identificationType = type and: [aCustomer identificationNumber = number]]! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'h 11/23/2023 20:23:49'!
PASSED!

!methodRemoval: Supplier #hasCustomerFirstNamed:lastName:withType:andNumber: stamp: 'h 11/23/2023 20:24:09'!
hasCustomerFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number

	^customers anySatisfy: [:aCustomer | aCustomer isFirstNamed: aFirstName lastName: aLastName withType: type andNumber: number]
	
	!

----QUIT----(23 November 2023 20:26:57) CuisUniversity-5981.image priorSource: 10268822!

----STARTUP---- (27 November 2023 01:07:04) as C:\Users\Intekio\Desktop\cuis\CuisUniversity-5981.image!


DevelopmentEnvironment makeCurrent !

DevelopmentEnvironment makeCurrent !

DevelopmentEnvironment makeCurrent !

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 01:08:17'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:08:20'!
PASSED!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:08:21'!
PASSED!
!Customer methodsFor: 'tests' stamp: 'H 11/27/2023 01:16:10'!
isIdentifiedAs: type number: number 
	
	^identificationNumber = number asString and: [identificationType = type].! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 01:16:50' prior: 50653046!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:22:43'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 01:24:33' prior: 50653171!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:24:34'!
ERROR!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:24:34'!
ERROR!

stream!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 01:40:57' prior: 50652882 overrides: 50651713!
importRecord

	record first = 'S' ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	record first = 'NC' ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	! !

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:41:01'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:41:02'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:41:03'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 01:41:03'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 01:41:03'!
PASSED!

!testRun: #ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 01:41:03'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 01:41:03'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 01:41:04'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 01:41:04'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 01:41:04'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 01:41:04'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 01:41:04'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 01:41:04'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:01:34'!
test02MultipleSupplierRecordsAreImportedCorrectly

	|stream supplier |

	stream := ReadStream on: 
'S,supplier1,D,123
S,supplier2,D,124'.
	SupplierImporter valueFrom: stream into: system.
	
	self assert: system numberOfSuppliers equals: 2.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier isNamed: 'supplier1').
	self assert: (supplier isIdentifiedAs: 'D' number: '123').
	self assert: supplier isAddressesEmpty .
	self assert: supplier isCustomersEmpty.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 124.
	self assert: (supplier isNamed: 'supplier2').
	self assert: (supplier isIdentifiedAs: 'D' number: '124').
	self assert: supplier isAddressesEmpty .
	self assert: supplier isCustomersEmpty.! !

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 02:01:36'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:01:43'!
test03SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!methodRemoval: ImportTest #test02SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:01:43'!
test02SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:03:36'!
test04MultipleSupplierCustomerRecordAreImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444
NC,Pep,Sancho,D,444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 2).
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444').
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'444' .
	self assert: customer firstName equals: 'Pep' .
	self assert: customer lastName equals: 'Sancho' .
	self assert: (customer isIdentifiedAs: 'D' number: '444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '444')! !

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:03:37'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:05:35'!
test05ExistingCustomerRecordFindsExistingCustomers

	|stream supplier existingCustomer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444
EC,D,22333444'.
	existingCustomer := SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assert: existingCustomer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:06:06' prior: 50653401!
test05ExistingCustomerRecordFindsExistingCustomers

	|stream existingCustomer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444
EC,D,22333444'.
	existingCustomer := SupplierImporter valueFrom: stream into: system.
	
	self assert: existingCustomer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!testRun: #ImportTest #test05ExistingCustomerRecordFindsExistingCustomers stamp: 'H 11/27/2023 02:06:09'!
FAILURE!

!testRun: #ImportTest #test05ExistingCustomerRecordFindsExistingCustomers stamp: 'H 11/27/2023 02:06:09'!
FAILURE!

!methodRemoval: ImportTest #test05ExistingCustomerRecordFindsExistingCustomers stamp: 'H 11/27/2023 02:07:18'!
test05ExistingCustomerRecordFindsExistingCustomers

	|stream existingCustomer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444
EC,D,22333444'.
	existingCustomer := SupplierImporter valueFrom: stream into: system.
	
	self assert: existingCustomer equals: (system customerWithIdentificationType: 'D' number: '22333444')!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:11:59'!
test05ExistingCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 'C,Pepe,Sanchez,D,22333444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:12:01'!
FAILURE!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:12:01'!
FAILURE!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:16:02' prior: 50653227 overrides: 50651713!
importRecord

	record first = 'S' ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	record first = 'NC' ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	record first = 'EC' ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	! !

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:16:07'!
ERROR!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:16:07'!
ERROR!

system customerWithIdentificationType: record second number: record third!

customers!

self first!

anIdType!

anIdNumber!

customers!

self size!

customers!

self first!

aCustomer identificationType!

anIdType!

anIdType!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:19:39' prior: 50653453!
test05ExistingCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 'C,Pepe,Sanchez,D,22333444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:19:40'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:19:42'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 02:19:42'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:19:42'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:19:42'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:19:42'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:20:53'!
test06MultipleExistingCustomerRecordAreImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'C,Pepe,Sanchez,D,22333444
C,Pep,Sancho,D,444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,D,22333444
EC,D,444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 2).
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444').
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'444' .
	self assert: customer firstName equals: 'Pep' .
	self assert: customer lastName equals: 'Sancho' .
	self assert: (customer isIdentifiedAs: 'D' number: '444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '44')! !

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:20:54'!
ERROR!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:20:54'!
ERROR!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:21:24' prior: 50653568!
test06MultipleExistingCustomerRecordAreImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'C,Pepe,Sanchez,D,22333444
C,Pep,Sancho,D,444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,D,22333444
EC,D,444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 2).
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: customer firstName equals: 'Pepe' .
	self assert: customer lastName equals: 'Sanchez' .
	self assert: (customer isIdentifiedAs: 'D' number: '22333444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444').
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'444' .
	self assert: customer firstName equals: 'Pep' .
	self assert: customer lastName equals: 'Sancho' .
	self assert: (customer isIdentifiedAs: 'D' number: '444').
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '444')! !

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:21:25'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:26:55' prior: 50653316!
test03SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	
	self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'. 
	
	customer := supplier customerWithIdType: 'D' andIdNumber:'22333444' .
	self assert: (supplier customerCountIs: 1).
	self assert: customer equals: (system customerWithIdentificationType: 'D' number: '22333444')! !

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:26:56'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:28:03' prior: 50653655!
test03SupplierCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	
	customer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'. 
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'22333444')! !

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:28:04'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:29:12' prior: 50653363!
test04MultipleSupplierCustomerRecordAreImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'S,supplier1,D,123
NC,Pepe,Sanchez,D,22333444
NC,Pep,Sancho,D,444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 2).
	
	customer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'. 
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'22333444').
	
	customer := self assertCustomerWithIdentificationType: 'D' number: '444' hasFirstName: 'Pep' lastName: 'Sancho'.
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'444')! !

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:29:13'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:29:49' prior: 50653521!
test05ExistingCustomerRecordIsImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 'C,Pepe,Sanchez,D,22333444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,D,22333444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 1).
	
	customer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'. 
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'22333444')! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:30:35' prior: 50653613!
test06MultipleExistingCustomerRecordAreImportedCorrectly

	|stream supplier customer|

	stream := ReadStream on: 
'C,Pepe,Sanchez,D,22333444
C,Pep,Sancho,D,444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'S,supplier1,D,123
EC,D,22333444
EC,D,444'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: (supplier customerCountIs: 2).
	
	customer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'. 
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'22333444' ).

	customer := self assertCustomerWithIdentificationType: 'D' number: '444' hasFirstName: 'Pep' lastName: 'Sancho'. 
	self assert: customer equals: (supplier customerWithIdType: 'D' andIdNumber:'444')! !

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:30:36'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:30:37'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:33:45'!
test07SupplierAddressRecordIsImportedCorrectly

	|stream supplier address|
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: '3322' town: 'Olivos' zipCode: '1636' province:  'BsAs'! !
!ImportTest methodsFor: 'assertions' stamp: 'H 11/27/2023 02:34:22' prior: 50650470!
assertAddressOf: importedCustomer at: aStreetName hasNumber: aNumber town: aTown zipCode: aZipCode province: aProvince

	| importedAddress |

	importedAddress := importedCustomer addressAt: aStreetName ifNone: [ self fail ].
	self assert: aStreetName equals: importedAddress streetName.
	self assert: aNumber equals: importedAddress streetNumber.
	self assert: aTown equals: importedAddress town.
	self assert: aZipCode equals: importedAddress zipCode.
	self assert: aProvince equals: importedAddress province.
	
	^importedAddress 

	! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:34:57' prior: 50653815!
test07SupplierAddressRecordIsImportedCorrectly

	|stream supplier address|
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: '3322' town: 'Olivos' zipCode: '1636' province:  'BsAs'! !
!ImportTest methodsFor: 'assertions' stamp: 'H 11/27/2023 02:35:11' prior: 50653831!
assertAddressOf: importedCustomer at: aStreetName hasNumber: aNumber town: aTown zipCode: aZipCode province: aProvince

	| importedAddress |

	importedAddress := importedCustomer addressAt: aStreetName ifNone: [ self fail ].
	self assert: aStreetName equals: importedAddress streetName.
	self assert: aNumber equals: importedAddress streetNumber.
	self assert: aTown equals: importedAddress town.
	self assert: aZipCode equals: importedAddress zipCode.
	self assert: aProvince equals: importedAddress province.

	! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:36:01' prior: 50653851!
test07SupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'! !

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:37:53'!
FAILURE!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:37:53'!
FAILURE!

Object subclass: #CsvAddressMapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvAddressMapper category: 'CustomerImporter' stamp: 'H 11/27/2023 02:39:20'!
Object subclass: #CsvAddressMapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:41:21' prior: 50653488 overrides: 50651713!
importRecord

	record first = 'S' ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	record first = 'NC' ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	record first = 'EC' ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	record first = 'A' ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:28'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:29'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 02:41:29'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:30'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:41:30'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:30'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:41:30'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:30'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:41:44'!
test07MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:41:49'!
test08MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'! !

!methodRemoval: ImportTest #test07MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:49'!
test07MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:41:51'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:42:21' prior: 50653994!
test08MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'.
	self assertAddressOf: supplier at: 'Maipu' hasNumber: 888 town: 'Florida' zipCode: 1122 province:  'Buenos Aires'.! !

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:42:22'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:43:49' prior: 50653886!
test07SupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: supplier adressessCount equals: 2.
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'! !

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:43:51'!
ERROR!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:43:51'!
ERROR!
!Supplier methodsFor: 'addresses' stamp: 'H 11/27/2023 02:44:02'!
adressessCount
	self shouldBeImplemented.! !
!Supplier methodsFor: 'addresses' stamp: 'H 11/27/2023 02:44:12' prior: 50654079!
adressessCount
	
	^addresses size! !

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:44:14'!
FAILURE!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:44:14'!
FAILURE!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:44:18' prior: 50654056!
test07SupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: supplier adressessCount equals: 1.
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:44:26' prior: 50654032!
test08MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: supplier adressessCount equals: 1.
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'.
	self assertAddressOf: supplier at: 'Maipu' hasNumber: 888 town: 'Florida' zipCode: 1122 province:  'Buenos Aires'.! !

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:44:26'!
FAILURE!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:44:26'!
FAILURE!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 02:44:30' prior: 50654111!
test08MultipleSupplierAddressRecordIsImportedCorrectly

	|stream supplier |
	
	stream := ReadStream on: 
'S,supplier1,D,123
A,San Martin,3322,Olivos,1636,BsAs
A,Maipu,888,Florida,1122,Buenos Aires'.
	SupplierImporter valueFrom: stream into: system.
	
	supplier := system supplierWithIdentificationType: 'D'  number: 123.
	self assert: supplier adressessCount equals: 2.
	self assertAddressOf: supplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province:  'BsAs'.
	self assertAddressOf: supplier at: 'Maipu' hasNumber: 888 town: 'Florida' zipCode: 1122 province:  'Buenos Aires'.! !

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:44:31'!
PASSED!
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:46:46'!
isSupplierRecord

	^ record first = 'S'! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:46:46' prior: 50653921 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	record first = 'NC' ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	record first = 'EC' ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	record first = 'A' ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:46:54'!
isNewCustomerRecord

	^ record first = 'NC'! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:46:54' prior: 50654173 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	record first = 'EC' ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	record first = 'A' ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:47:03'!
isExistingCustomerRecord

	^ record first = 'EC'! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:47:03' prior: 50654208 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	record first = 'A' ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:47:40' prior: 50654243 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:05'!
importSupplier

	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:05' prior: 50654274 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		self importSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:19'!
keyword1: newCustomer

	newSupplier addCustomer: newCustomer .
		system add: newCustomer! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:19' prior: 50654313 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		self importSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		self keyword1: newCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:05' prior: 50654346 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		self importSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ |newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:52'!
importNewCustomer

	|newCustomer| newCustomer := (csvCustomerMapper mapFrom: record).
		newSupplier addCustomer: newCustomer .
		system add: newCustomer! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:48:52' prior: 50654372 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		self importSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ self importNewCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third).
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:49:48'!
importExistingCustomer

	^ newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third)! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:49:48' prior: 50654407 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [
		self importSupplier
		].
	
	self isNewCustomerRecord ifTrue: [ self importNewCustomer.
		].
	
	self isExistingCustomerRecord ifTrue: [ 
		self importExistingCustomer.
		].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:50:07' prior: 50654438 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [self importSupplier].
	
	self isNewCustomerRecord ifTrue: [ self importNewCustomer.].
	
	self isExistingCustomerRecord ifTrue: [ self importExistingCustomer.].
	
	self isAddressRecord ifTrue: [ |newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:50:23'!
importAddress

	|newAddress|
		newAddress := Address new.
		newSupplier addAddress: newAddress.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:50:23' prior: 50654459 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [self importSupplier].
	
	self isNewCustomerRecord ifTrue: [ self importNewCustomer.].
	
	self isExistingCustomerRecord ifTrue: [ self importExistingCustomer.].
	
	self isAddressRecord ifTrue: [ self importAddress
		]
	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 02:50:29' prior: 50654493 overrides: 50651713!
importRecord

	self isSupplierRecord ifTrue: [self importSupplier].
	
	self isNewCustomerRecord ifTrue: [ self importNewCustomer.].
	
	self isExistingCustomerRecord ifTrue: [ self importExistingCustomer.].
	
	self isAddressRecord ifTrue: [ self importAddress]
	! !

!methodRemoval: SupplierImporter #keyword1: stamp: 'H 11/27/2023 02:51:00'!
keyword1: newCustomer

	newSupplier addCustomer: newCustomer .
		system add: newCustomer!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 02:51:23'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 02:51:23'!
PASSED!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 02:57:02' prior: 50654479!
importAddress

	|newAddress|
		newAddress := Address new.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth.
		
		newSupplier addAddress: newAddress.! !
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 02:57:24' prior: 50654583!
importAddress

	|newAddress|
		newAddress := Address new.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth.
		! !

!classRemoval: #CsvAddressMapper stamp: 'H 11/27/2023 02:57:40'!
Object subclass: #CsvAddressMapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CsvAddressMapper category: 'CustomerImporter' stamp: 'H 11/27/2023 03:02:08'!
Object subclass: #CsvAddressMapper
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CsvAddressMapper class methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:02:08'!
mapFrom: aRecord
	^self new initializeMapFrom: aRecord! !
!CsvAddressMapper methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:02:09'!
initializeMapFrom: aRecord
	record := aRecord.! !
!CsvAddressMapper methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:02:09'!
map

	|newAddress|
		newAddress := Address new.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth.
		! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:02:09' prior: 50654596!
importAddress
	(CsvAddressMapper mapFrom: record) map! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:06:52' prior: 50652718!
importCustomer
	
	self assertValidCustomerRecord: record.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	
	system add: newCustomer.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:06:55'!
FAILURE!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:06:55'!
ERROR!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:06:56'!
FAILURE!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:06:56'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
FAILURE!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:08:06'!
ERROR!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:08:06'!
FAILURE!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:08:07'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:08:56'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:09:04'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:09:16'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:09:22'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:09:22'!
ERROR!
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:09:53' prior: 50654649!
importCustomer
	
	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	
	system add: newCustomer.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:09:55'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:09:55'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:09:55'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:09:55'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
FAILURE!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:09:56'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:09:56'!
FAILURE!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:09:56'!
PASSED!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 02:57:24' prior: 50654644!
importAddress

	|newAddress|
		newAddress := Address new.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth.
		! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:10:23'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:24'!
FAILURE!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:24'!
FAILURE!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:10:24'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:44'!
FAILURE!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:10:44'!
FAILURE!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:12:53' prior: 50654869!
importAddress

	|newAddress|
		newAddress := Address new.
		newAddress streetName: record second.
		newAddress streetNumber: record third asNumber .
		newAddress town: record fourth.
		newAddress zipCode: record fifth asNumber .
		newAddress province: record sixth.
		
	newSupplier addAddress: newAddress.
		! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:12:57'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:12:58'!
PASSED!

!classRenamed: #XXImporter as: #PartyImporter stamp: 'H 11/27/2023 03:13:22'!
Smalltalk renameClassNamed: #XXImporter as: #PartyImporter!
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:14:46'!
mapCustomer

	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:14:47' prior: 50654797!
importCustomer
	
	self mapCustomer.
	
	system add: newCustomer.! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:16:28' prior: 50655036!
importCustomer
	
	newCustomer := self mapCustomer.
	
	system add: newCustomer.! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:17:35'!
mapRecordToCustomer

	|customer|
	self assertValidCustomerRecord.

	customer := Customer new.
	customer firstName: record second.
	customer lastName: record third.
	customer identificationType: record fourth.
	customer identificationNumber: record fifth.
	
	^customer! !

!methodRemoval: CustomerImporter #mapCustomer stamp: 'H 11/27/2023 03:17:38'!
mapCustomer

	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth!
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:17:47' prior: 50655041!
importCustomer
	
	newCustomer := self mapRecordToCustomer .
	
	system add: newCustomer.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:17:48'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:17:49'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:17:49'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:17:49'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:17:49'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:17:49'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:17:49'!
PASSED!
!PartyImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:17:59'!
mapRecordToCustomer

	|customer|
	self assertValidCustomerRecord.

	customer := Customer new.
	customer firstName: record second.
	customer lastName: record third.
	customer identificationType: record fourth.
	customer identificationNumber: record fifth.
	
	^customer! !

!methodRemoval: CustomerImporter #mapRecordToCustomer stamp: 'H 11/27/2023 03:17:59'!
mapRecordToCustomer

	|customer|
	self assertValidCustomerRecord.

	customer := Customer new.
	customer firstName: record second.
	customer lastName: record third.
	customer identificationType: record fourth.
	customer identificationNumber: record fifth.
	
	^customer!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:18:29' prior: 50654398!
importNewCustomer

	|newCustomer| 
	
	newCustomer := self mapRecordToCustomer .
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
ERROR!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
ERROR!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:18:31'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:18:32'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:18:32'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:18:32'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:18:32'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:18:32'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:18:32'!
PASSED!
!PartyImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:19:21'!
assertValidCustomerRecord

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]! !

!methodRemoval: CustomerImporter #assertValidCustomerRecord stamp: 'H 11/27/2023 03:19:21'!
assertValidCustomerRecord

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:19:30'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:19:31'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:19:31'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:19:31'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:19:31'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:19:31'!
PASSED!
!CustomerImporter methodsFor: 'customer' stamp: 'h 11/23/2023 19:13:42' prior: 50655068!
importCustomer
	newCustomer := csvCustomerMapper mapFrom: record.
	system add: newCustomer.! !

!classRemoval: #CsvAddressMapper stamp: 'H 11/27/2023 03:32:23'!
Object subclass: #CsvAddressMapper
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:34:01' prior: 50655157!
importNewCustomer

	|newCustomer| 
	
	newCustomer := CsvCustomerMapper mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:34:03'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:34:03'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:34:03'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:34:03'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:34:03'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
ERROR!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
ERROR!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:34:04'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:35:46'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:47'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
ERROR!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
ERROR!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:35:48'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:35:53'!
ERROR!
!CsvImporter methodsFor: 'initialization' stamp: 'H 11/27/2023 03:36:29' prior: 50652710!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	system := aCustomerSystem .! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:36:48' prior: 50655298!
importCustomer
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	system add: newCustomer.! !
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:36:59' prior: 50655311!
importNewCustomer

	|newCustomer| 
	
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:37:01'!
PASSED!

!methodRemoval: PartyImporter #mapRecordToCustomer stamp: 'H 11/27/2023 03:37:35'!
mapRecordToCustomer

	|customer|
	self assertValidCustomerRecord.

	customer := Customer new.
	customer firstName: record second.
	customer lastName: record third.
	customer identificationType: record fourth.
	customer identificationNumber: record fifth.
	
	^customer!

!methodRemoval: PartyImporter #assertValidCustomerRecord stamp: 'H 11/27/2023 03:37:41'!
assertValidCustomerRecord

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:38:33'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:38:33'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:38:33'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:38:33'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:38:34'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:38:34'!
PASSED!
!CustomerImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:40:19' prior: 50650823!
importAddress

	| newAddress |

	self assertCustomerWasImported.
	self assertValidAddressRecord.

	newAddress := Address new.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth.
	
	newCustomer addAddress: newAddress.! !
!CustomerImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:40:45' prior: 50655606!
importAddress

	| newAddress |

	newAddress := self mapRecordToAddress: record.
	
	newCustomer addAddress: newAddress.! !
!PartyImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:41:27'!
mapRecordToAddress: aRecord
	|newAddress|
	
	self assertValidAddressRecord.

	newAddress := Address new.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth.! !
!CustomerImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:41:37' prior: 50655621!
importAddress

	| newAddress |
	self assertCustomerWasImported.
	newAddress := self mapRecordToAddress: record.
	
	newCustomer addAddress: newAddress.! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
ERROR!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:41:41'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:41:41'!
ERROR!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:42:18'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:42:18'!
ERROR!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:42:18'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:42:19'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:42:19'!
ERROR!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:43:02'!
ERROR!
!PartyImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:43:33' prior: 50655627!
mapRecordToAddress: aRecord
	|newAddress|
	
	self assertValidAddressRecord.

	newAddress := Address new.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth.
	
	^newAddress ! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:43:34'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:43:35'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:43:35'!
PASSED!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:43:57' prior: 50654948!
importAddress

	|newAddress|
	
	newAddress := self mapRecordToAddress: record.
		
	newSupplier addAddress: newAddress.
		! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:44:00'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:44:01'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:44:01'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:49:28'!
test09CannotImportAddressWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'A,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportAddressWithoutSupplier.! !

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:49:36'!
ERROR!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:49:37'!
ERROR!
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:49:44'!
cannotImportAddressWithoutSupplier
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:49:58' prior: 50655936!
cannotImportAddressWithoutSupplier
	
	^'cannot import address without supplier'! !

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:50:00'!
FAILURE!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:50:00'!
FAILURE!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:51:10' prior: 50655851!
importAddress

	|newAddress|
	
	self assertSupplierWasImported.
	
	newAddress := self mapRecordToAddress: record.
	newSupplier addAddress: newAddress.
		! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:52:37'!
cannotImportAddressWithoutSupplierError
	
	^'cannot import address without supplier'! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:52:37' prior: 50655918!
test09CannotImportAddressWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'A,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportAddressWithoutSupplierError.! !

!methodRemoval: SupplierImporter class #cannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:52:37'!
cannotImportAddressWithoutSupplier
	
	^'cannot import address without supplier'!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:52:51'!
assertCustomerWasImported

	^ newSupplier ifNil: [ self error: self class canNotImportAddressWithoutSupplierError ]! !
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:53:12' prior: 50655985!
assertCustomerWasImported

	^ newSupplier ifNil: [ self error: self class cannotImportAddressWithoutSupplierError ]! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:53:17'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:18'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:53:18'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:53:18'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:53:18'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:18'!
ERROR!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:53:18'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:18'!
ERROR!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:53:18'!
FAILURE!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:53:18'!
PASSED!
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:53:39'!
assertSupplierWasImported

	^ newSupplier ifNil: [ self error: self class cannotImportAddressWithoutSupplierError ]! !

!methodRemoval: SupplierImporter #assertCustomerWasImported stamp: 'H 11/27/2023 03:53:39'!
assertCustomerWasImported

	^ newSupplier ifNil: [ self error: self class cannotImportAddressWithoutSupplierError ]!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:53:51'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:53:52'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:53:52'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:54:19'!
test09CannotImportNewCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'NC,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportNewCustomerWithoutSupplierError.! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:54:27'!
test10CannotImportNewCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'NC,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportNewCustomerWithoutSupplierError.! !

!methodRemoval: ImportTest #test09CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:54:27'!
test09CannotImportNewCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'NC,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportNewCustomerWithoutSupplierError.!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:54:28'!
ERROR!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:54:28'!
ERROR!
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:54:31'!
cannotImportNewCustomerWithoutSupplierError
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:54:44' prior: 50656181!
cannotImportNewCustomerWithoutSupplierError
	
	^'cannot import new customer without supplier'! !
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:55:29' prior: 50655460!
importNewCustomer

	|newCustomer| 
	
	newSupplier ifNil: [self class cannotImportNewCustomerWithoutSupplierError].
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:56:08'!
assertSupplierIsntMissing

	^ newSupplier ifNil: [self class cannotImportNewCustomerWithoutSupplierError]! !
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:56:08' prior: 50656193!
importNewCustomer

	|newCustomer| 
	
	self assertSupplierIsntMissing.
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !
!SupplierImporter methodsFor: 'address' stamp: 'H 11/27/2023 03:56:28' prior: 50656062!
assertSupplierWasImported

	^ newSupplier ifNil: [ self error: self class cannotImportRecordsWithoutSupplierError ]! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 03:56:40'!
cannotImportRecordsWithoutSupplierError
	
	^'cannot import address without supplier'! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 03:56:40' prior: 50655968!
test09CannotImportAddressWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'A,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError.! !

!methodRemoval: SupplierImporter class #cannotImportAddressWithoutSupplierError stamp: 'H 11/27/2023 03:56:40'!
cannotImportAddressWithoutSupplierError
	
	^'cannot import address without supplier'!

!methodRemoval: SupplierImporter class #cannotImportNewCustomerWithoutSupplierError stamp: 'H 11/27/2023 03:56:47'!
cannotImportNewCustomerWithoutSupplierError
	
	^'cannot import new customer without supplier'!

!methodRemoval: SupplierImporter #assertSupplierIsntMissing stamp: 'H 11/27/2023 03:57:36'!
assertSupplierIsntMissing

	^ newSupplier ifNil: [self class cannotImportNewCustomerWithoutSupplierError]!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 03:57:46' prior: 50656210!
importNewCustomer

	|newCustomer| 
	
	self assertSupplierWasImported .
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:57:57'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:57:58'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:57:58'!
ERROR!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:57:58'!
ERROR!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:58:10' prior: 50656150!
test10CannotImportNewCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'NC,San Martin,3322,Olivos,1636,BsAs'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError .! !

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:58:11'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:58:12'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 03:58:13'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:58:13'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:58:36'!
test10CannotImportExistingCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'EC,D,444'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError .! !

!testRun: #ImportTest #test10CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 03:58:36'!
FAILURE!

!testRun: #ImportTest #test10CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 03:58:36'!
FAILURE!

!methodRemoval: ImportTest #test10CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 03:58:44'!
test10CannotImportExistingCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'EC,D,444'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError .!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 03:59:46'!
test11CannotImportExistingCustomerWithoutSupplier

	|stream |

	stream := ReadStream on: 'C,Pepe,Sanchez,D,444'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 
'EC,D,444'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError .! !

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 03:59:47'!
FAILURE!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 03:59:47'!
FAILURE!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 03:59:50'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:00:00' prior: 50656343!
test10CannotImportNewCustomerWithoutSupplier

	|stream |
	
	stream := ReadStream on: 
'NC,Pepe,Sanchez,D,444'.

	self should:[SupplierImporter valueFrom: stream into: system.]
		raise: Error
		withMessageText: SupplierImporter cannotImportRecordsWithoutSupplierError .! !

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:00:01'!
PASSED!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 04:00:22' prior: 50654430!
importExistingCustomer

	self assertSupplierWasImported .
	^ newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third)! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:00:24'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:00:25'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:00:26'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:03:21'!
test12CannotImportEmptyLine

	self
		shouldFailImporting: self emptyLine
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

! !

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:03:23'!
ERROR!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:03:23'!
ERROR!
!ImportTest methodsFor: 'assertions' stamp: 'H 11/27/2023 04:03:32'!
assertNoSupplierWasImported
	self shouldBeImplemented.! !
!ImportTest methodsFor: 'assertions' stamp: 'H 11/27/2023 04:03:56' prior: 50656587!
assertNoSupplierWasImported
	
	self assert: system numberOfSuppliers equals: 0! !

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:04:04'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:34:25'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:34:26'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:34:26'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:34:26'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:34:26'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:34:26'!
PASSED!
!PartyImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 04:36:01'!
invalidAddressRecordErrorDescription

	^'Address record has to have six fields'! !

!methodRemoval: CustomerImporter class #invalidAddressRecordErrorDescription stamp: 'H 11/27/2023 04:36:01'!
invalidAddressRecordErrorDescription

	^'Address record has to have six fields'!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:41:41'!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		shouldFailImporting: stream
		messageText: SupplierImporter invalidAddressRecordErrorDescription
		asserting: [self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier numberOfAddresses equals: 0.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:42:03' prior: 50656685!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		shouldFailImporting: stream
		messageText: SupplierImporter invalidAddressRecordErrorDescription
		asserting: [self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:42:04'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:42:04'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:42:13'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:42:13'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:43:30'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:43:30'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:44:32'!
FAILURE!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:46:13' prior: 50656703!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: stream
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:46:14'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:46:14'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:46:24'!
FAILURE!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:46:24'!
FAILURE!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:47:02' prior: 50656746!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:47:02'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:47:06'!
test13CanNotImportAddressRecordWithLessThanSixField
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!methodRemoval: ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:47:06'!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:47:08'!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!methodRemoval: ImportTest #test13CanNotImportAddressRecordWithLessThanSixField stamp: 'H 11/27/2023 04:47:08'!
test13CanNotImportAddressRecordWithLessThanSixField
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:47:32'!
test13CanNotImportAddressRecordWithMoreThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636,ss,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:47:36'!
test14CanNotImportAddressRecordWithMoreThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636,ss,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!methodRemoval: ImportTest #test13CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:47:36'!
test13CanNotImportAddressRecordWithMoreThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636,ss,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:47:37'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:48:30'!
test15CanNotImportSuplierRecordWithMoreThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D,123,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidSupplierRecordErrorDescription.
			self assert: system numberOfSuppliers equals:0.
			 ]! !

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:48:34'!
FAILURE!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:48:34'!
FAILURE!
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:50:23' prior: 50654304!
importSupplier

	record size > 4 ifTrue:  [self assert: self class supplierRecordShouldHaveFourFieldsError ].
	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:50:49' prior: 50656964!
importSupplier

	record size > 4 ifTrue:  [self assert: self class invalidSupplierRecordErrorDescription].
	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 04:51:05'!
invalidSupplierRecordErrorDescription
	
	^'supplier record has to have four fields'! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:51:09'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:51:10'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:51:10'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:51:10'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:51:10'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:51:10'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:51:24'!
test16CanNotImportSuplierRecordWithLessThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D,'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidSupplierRecordErrorDescription.
			self assert: system numberOfSuppliers equals:0.
			 ]! !

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:51:24'!
PASSED!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:51:41'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:51:42'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:51:51' prior: 50657076!
test16CanNotImportSuplierRecordWithLessThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | anError messageText = SupplierImporter invalidSupplierRecordErrorDescription.
			self assert: system numberOfSuppliers equals:0.
			 ]! !

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:51:52'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:52:59' prior: 50657182!
test16CanNotImportSuplierRecordWithLessThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidSupplierRecordErrorDescription.
			self assert: system numberOfSuppliers equals:0.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:53:05' prior: 50656942!
test15CanNotImportSuplierRecordWithMoreThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D,123,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | 
			self assert: anError messageText = SupplierImporter invalidSupplierRecordErrorDescription.
			self assert: system numberOfSuppliers equals:0.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:53:11' prior: 50656841!
test13CanNotImportAddressRecordWithLessThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:53:16' prior: 50656899!
test14CanNotImportAddressRecordWithMoreThanSixFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
A,San Martin,3322,Olivos,1636,ss,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError | 
			self assert: anError messageText = SupplierImporter invalidAddressRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isAddressesEmpty.
			 ]! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:53:17'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:53:18'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:53:19'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:53:19'!
FAILURE!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:53:19'!
FAILURE!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:53:30'!
FAILURE!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:53:30'!
FAILURE!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:54:07'!
FAILURE!
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:54:25' prior: 50656975!
importSupplier

	record size > 4 ifTrue:  [self error: self class invalidSupplierRecordErrorDescription].
	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:54:44'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:54:45'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:54:45'!
FAILURE!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:54:45'!
FAILURE!
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:55:03' prior: 50657369!
importSupplier

	record size = 4 ifFalse:  [self error: self class invalidSupplierRecordErrorDescription].
	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:55:05'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:55:06'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:55:06'!
PASSED!
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:55:22'!
assertValidSupplierRecord

	^ record size = 4 ifFalse:  [self error: self class invalidSupplierRecordErrorDescription]! !
!SupplierImporter methodsFor: 'supplier' stamp: 'H 11/27/2023 04:55:22' prior: 50657472!
importSupplier

	self assertValidSupplierRecord.
	newSupplier := Supplier named: record second identificationType: record third number: record fourth.
		system addSupplier: newSupplier! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:56:09'!
test17CanNotImportNewCustomerRecordWithLessThanFourFields
		
	|stream |
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:56:30' prior: 50657586!
test17CanNotImportNewCustomerRecordWithLessThanFourFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:56:32'!
ERROR!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:56:32'!
ERROR!
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 04:56:39'!
invalidNewCustomerRecordErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 04:57:02' prior: 50657629!
invalidNewCustomerRecordErrorDescription
	^'New customer record should have 5 fields'! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 04:57:11'!
test17CanNotImportNewCustomerRecordWithLessThanFiveFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!methodRemoval: ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:57:11'!
test17CanNotImportNewCustomerRecordWithLessThanFourFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription.
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:57:15'!
FAILURE!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:57:15'!
FAILURE!
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 04:58:25' prior: 50652731!
mapFrom: record
	| newCustomer |

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'h 11/23/2023 19:15:33' prior: 50657689!
mapFrom: record
	| newCustomer |
	
	self assertValidCustomerRecord: record.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 04:59:27'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 04:59:28'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:59:28'!
FAILURE!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 04:59:28'!
FAILURE!
!CsvCustomerMapper methodsFor: 'assert' stamp: 'H 11/27/2023 05:00:08' prior: 50652795!
assertValidCustomerRecord: record

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]! !

!methodRemoval: CsvCustomerMapper #invalidCustomerRecordErrorDescription stamp: 'H 11/27/2023 05:00:15'!
invalidCustomerRecordErrorDescription

	^'Invalid Customer record'!
!CsvCustomerMapper class methodsFor: 'no messages' stamp: 'H 11/27/2023 05:00:19'!
invalidCustomerRecordErrorDescription

	^'Invalid Customer record'! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:00:22'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:00:23'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:00:23'!
FAILURE!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:00:23'!
FAILURE!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:00:40' prior: 50657641!
test17CanNotImportNewCustomerRecordWithLessThanFiveFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = CsvCustomerMapper invalidCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:00:41'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:00:58'!
test18CanNotImportNewCustomerRecordWithMoreThanFiveFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D,444,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = CsvCustomerMapper invalidCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:00:59'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:03:25'!
test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields
		
	|stream supplier|
	
	stream := ReadStream on: 'C,Pepe,Sanchez,D,22333444	'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 'S,Supplier1,D,123
EC,D,22333444,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidExistingCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:03:28'!
ERROR!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:03:28'!
ERROR!
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 05:03:31'!
invalidExistingCustomerRecordErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error messages' stamp: 'H 11/27/2023 05:03:46' prior: 50658000!
invalidExistingCustomerRecordErrorDescription
	^'Existing customer record should have 3 fields'! !

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:03:51'!
FAILURE!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:03:51'!
FAILURE!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:04:34' prior: 50656495!
importExistingCustomer

	self assertSupplierWasImported .
	record size > 3 ifTrue: [self error: self class invalidExistingCustomerRecordErrorDescription ].
	^ newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third)! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:04:36'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:04:37'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:04:54'!
test20CanNotImportExistingCustomerRecordWithLessThanThreeFields
		
	|stream supplier|
	
	stream := ReadStream on: 'C,Pepe,Sanchez,D,22333444	'.
	CustomerImporter valueFrom: stream into: system.
	
	stream := ReadStream on: 'S,Supplier1,D,123
EC,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidExistingCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:04:54'!
FAILURE!

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:04:54'!
FAILURE!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:05:06' prior: 50658020!
importExistingCustomer

	self assertSupplierWasImported .
	record size = 3 ifFalse: [self error: self class invalidExistingCustomerRecordErrorDescription ].
	^ newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third)! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:05:07'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:05:08'!
PASSED!

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:05:09'!
PASSED!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:05:09'!
PASSED!

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:05:09'!
PASSED!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:05:25'!
assertValidExistingCustomer

	^ record size = 3 ifFalse: [self error: self class invalidExistingCustomerRecordErrorDescription ]! !
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:05:25' prior: 50658162!
importExistingCustomer

	self assertSupplierWasImported .
	self assertValidExistingCustomer.
	^ newSupplier addCustomer: (system customerWithIdentificationType: record second number: record third)! !
!CsvCustomerMapper methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 05:06:40' prior: 50657701!
mapFrom: record
	| newCustomer |

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	^newCustomer! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:06:52' prior: 50655454!
importCustomer
	self assertValidCustomerRecord.
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	system add: newCustomer.! !
!CustomerImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:07:05'!
assertValidCustomerRecord

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:07:08'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:07:08'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:07:08'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:07:08'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:07:09'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:07:10'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:07:10'!
FAILURE!

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:07:10'!
FAILURE!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:07:10'!
PASSED!

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:07:10'!
PASSED!

!methodRemoval: CsvCustomerMapper #assertValidCustomerRecord: stamp: 'H 11/27/2023 05:07:26'!
assertValidCustomerRecord: record

	^ record size ~= 5 ifTrue: [ self error: self class invalidCustomerRecordErrorDescription ]!

!methodRemoval: CsvCustomerMapper class #invalidCustomerRecordErrorDescription stamp: 'H 11/27/2023 05:07:28'!
invalidCustomerRecordErrorDescription

	^'Invalid Customer record'!
!SupplierImporter methodsFor: 'customer' stamp: 'H 11/27/2023 05:07:55' prior: 50656263!
importNewCustomer

	|newCustomer| 
	
	self assertSupplierWasImported .
	self assertValidCustomerRecord.
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !
!SupplierImporter methodsFor: 'asserts' stamp: 'H 11/27/2023 05:08:27'!
assertValidCustomerRecord.

	^ record size = 5 ifFalse:  [self error: self class invalidNewCustomerRecordErrorDescription]! !
!SupplierImporter methodsFor: 'asserts' stamp: 'H 11/27/2023 05:09:32'!
assertValidNewCustomerRecord.

	^ record size = 5 ifFalse:  [self error: self class invalidNewCustomerRecordErrorDescription]! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'H 11/27/2023 05:09:32' prior: 50658435!
importNewCustomer

	|newCustomer| 
	
	self assertSupplierWasImported .
	self assertValidNewCustomerRecord.
	newCustomer := (CsvCustomerMapper new) mapFrom: record.
	newSupplier addCustomer: newCustomer .
	system add: newCustomer! !

!methodRemoval: SupplierImporter #assertValidCustomerRecord stamp: 'H 11/27/2023 05:09:32'!
assertValidCustomerRecord.

	^ record size = 5 ifFalse:  [self error: self class invalidNewCustomerRecordErrorDescription]!

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:09:40'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:09:41'!
ERROR!

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:09:41'!
ERROR!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:09:41'!
PASSED!
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:09:54' prior: 50657923!
test17CanNotImportNewCustomerRecordWithLessThanFiveFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !
!ImportTest methodsFor: 'supplier tests' stamp: 'H 11/27/2023 05:10:02' prior: 50657946!
test18CanNotImportNewCustomerRecordWithMoreThanFiveFields
		
	|stream supplier|
	
	stream := ReadStream on: 'S,Supplier1,D,123
NC,Pepe,Sanchez,D,444,x'.

	self
		should: [SupplierImporter valueFrom: stream into:system ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: anError messageText = SupplierImporter invalidNewCustomerRecordErrorDescription .
			self assert: system numberOfSuppliers equals:1.
			supplier := system supplierWithIdentificationType: 'D' number: '123'.
			self assert: supplier isCustomersEmpty.
			 ]! !

!testRun: #ImportTest #test01SupplierRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:10:03'!
PASSED!

!testRun: #ImportTest #test01ValidDataIsImportedCorrectly stamp: 'H 11/27/2023 05:10:03'!
PASSED!

!testRun: #ImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'H 11/27/2023 05:10:03'!
PASSED!

!testRun: #ImportTest #test02MultipleSupplierRecordsAreImportedCorrectly stamp: 'H 11/27/2023 05:10:03'!
PASSED!

!testRun: #ImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test03SupplierCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test04MultipleSupplierCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test05ExistingCustomerRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test06MultipleExistingCustomerRecordAreImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test07SupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test08MultipleSupplierAddressRecordIsImportedCorrectly stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test09CannotImportAddressWithoutSupplier stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test09CannotImportEmptyLine stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test10CannotImportNewCustomerWithoutSupplier stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test11CannotImportExistingCustomerWithoutSupplier stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test12CannotImportEmptyLine stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test13CanNotImportAddressRecordWithLessThanSixFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test14CanNotImportAddressRecordWithMoreThanSixFields stamp: 'H 11/27/2023 05:10:04'!
PASSED!

!testRun: #ImportTest #test15CanNotImportSuplierRecordWithMoreThanFourFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

!testRun: #ImportTest #test16CanNotImportSuplierRecordWithLessThanFourFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

!testRun: #ImportTest #test17CanNotImportNewCustomerRecordWithLessThanFiveFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

!testRun: #ImportTest #test18CanNotImportNewCustomerRecordWithMoreThanFiveFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

!testRun: #ImportTest #test19CanNotImportExistingCustomerRecordWithMoreThanThreeFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

!testRun: #ImportTest #test20CanNotImportExistingCustomerRecordWithLessThanThreeFields stamp: 'H 11/27/2023 05:10:05'!
PASSED!

----SNAPSHOT----(27 November 2023 05:11:04) CuisUniversity-5981.image priorSource: 10286913!

----SNAPSHOT----(27 November 2023 05:12:41) CuisUniversity-5981.image priorSource: 10466349!

----QUIT----(27 November 2023 05:12:43) CuisUniversity-5981.image priorSource: 10466443!