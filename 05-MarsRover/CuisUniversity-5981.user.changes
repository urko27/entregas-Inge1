

----STARTUP---- (7 October 2023 18:37:36) as C:\Users\Intekio\Desktop\windows64\CuisUniversity-5981.image!


TestCase subclass: #MarsRoversTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #MarsRoversTests category: 'MarsRovers' stamp: 'h 10/7/2023 18:38:16'!
TestCase subclass: #MarsRoversTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Rovers category: 'MarsRovers' stamp: 'h 10/7/2023 18:38:49'!
Object subclass: #Rovers
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!
!MarsRoversTests methodsFor: 'no messages' stamp: 'h 10/7/2023 18:38:32'!
test01

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: ''. 
	
	self assert: (rovers isAt: 0@0 withDirection: #North)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:38:55'!
ERROR!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:38:55'!
ERROR!
!Rovers class methodsFor: 'instance creation' stamp: 'h 10/7/2023 18:38:59'!
atPosition: aRenameMe1 withDirection: aRenameMe2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAtPosition: aRenameMe1 withDirection: aRenameMe2 ! !
!Rovers class methodsFor: 'instance creation' stamp: 'h 10/7/2023 18:39:21' prior: 50331685!
atPosition: startingPosition withDirection: startingDirection
	
	^self new initializeAtPosition: startingPosition withDirection: startingDirection ! !
!Rovers class methodsFor: 'instance creation' stamp: 'h 10/7/2023 18:40:03' prior: 50331695!
atPosition: startingPosition withDirection: startingDirection
	
	^self new ! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:13'!
ERROR!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:13'!
ERROR!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:40:23'!
processInstructions: aRenameMe1 
	self shouldBeImplemented.! !
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:40:25' prior: 50331712!
processInstructions: aRenameMe1 
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:40:30' prior: 50331717!
processInstructions: instructions
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:33'!
ERROR!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:33'!
ERROR!
!Rovers methodsFor: 'test' stamp: 'h 10/7/2023 18:40:40'!
isAt: aRenameMe1 withDirection: aRenameMe2 
	self shouldBeImplemented.! !
!Rovers methodsFor: 'test' stamp: 'h 10/7/2023 18:40:47' prior: 50331729!
isAt: aRenameMe1 withDirection: aRenameMe2 
	
	^true! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:58'!
PASSED!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:40:58'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:42:16'!
test02RoversWithDiferentStartingPositionAndDirection

	|rovers|
	
	rovers := Rovers atPosition: 1@0 withDirection: #South.
	
	rovers processInstructions: ''. 
	
	self deny: (rovers isAt: 0@0 withDirection: #North)! !

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:42:18'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:42:18'!
FAILURE!
!Rovers class methodsFor: 'instance creation' stamp: 'h 10/7/2023 18:42:39' prior: 50331703!
atPosition: startingPosition withDirection: startingDirection
	
	^self initializeAtPosition: startingPosition withDirection: startingDirection! !

!classDefinition: #Rovers category: 'MarsRovers' stamp: 'h 10/7/2023 18:43:30'!
Object subclass: #Rovers
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Rovers category: 'MarsRovers' stamp: 'h 10/7/2023 18:43:31'!
Object subclass: #Rovers
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!
!Rovers methodsFor: 'initialize' stamp: 'h 10/7/2023 18:43:28'!
initializeAtPosition: startingPosition withDirection: startingDirection

	position := startingPosition .
	direction := startingDirection .! !
!Rovers methodsFor: 'test' stamp: 'h 10/7/2023 18:44:34' prior: 50331734!
isAt: posiblePosition withDirection: posibleDirection
	
	^position = posiblePosition and: [posibleDirection = direction]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:44:37'!
ERROR!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:44:37'!
ERROR!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:45:01'!
ERROR!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:45:01'!
ERROR!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:45:03'!
ERROR!
!Rovers class methodsFor: 'instance creation' stamp: 'h 10/7/2023 18:45:22' prior: 50331761!
atPosition: startingPosition withDirection: startingDirection
	
	^self new initializeAtPosition: startingPosition withDirection: startingDirection! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:45:23'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:45:24'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:46:12'!
test03

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'f'. 
	
	self assert: (rovers isAt: 0@1 withDirection: #North)! !
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:46:58' prior: 50331721!
processInstructions: instructions
	
	position := position x @ position y +1! !
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:47:44' prior: 50331833!
processInstructions: instructions
	
	instructions first = $f ifTrue: [position := position x @ position y +1]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:47:47'!
ERROR!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:47:47'!
ERROR!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:47:47'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:47:55'!
ERROR!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:47:55'!
ERROR!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:47:56'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:48:01'!
ERROR!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:48:42' prior: 50331838!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	position := position x @ position y +1.! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:48:45'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:48:45'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:48:45'!
FAILURE!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:48:45'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:48:51'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:48:51'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:48:51'!
FAILURE!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:48:51'!
FAILURE!

rovers!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:49:29' prior: 50331864!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	position := position x @ (position y +1).! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:49:31'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:49:31'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:49:31'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:49:44'!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@1 withDirection: #North)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:49:55' prior: 50331908!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@-1 withDirection: #North)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:49:59'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:49:59'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:49:59'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:49:59'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:49:59'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:51:12' prior: 50331893!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	position := position x @ (position y +1).! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:51:15'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:51:15'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:51:15'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:51:15'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:51:15'!
FAILURE!

rovers!

instructions first!

position x @ (position y -1)!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:52:54' prior: 50331939!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:52:56'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:52:56'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:52:56'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:52:56'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 18:57:23' prior: 50331963!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:59:13' prior: 50331917!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: #West)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:59:24' prior: 50331995!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@-1 withDirection: #North)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:59:25'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:59:25'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:59:25'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:59:25'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 18:59:36'!
test05

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@-1 withDirection: #West)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 18:59:38'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 18:59:38'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 18:59:38'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 18:59:38'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 18:59:38'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 18:59:38'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:00:33' prior: 50331984!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	instructions first = $i ifTrue:  [direction := #West].! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:00:39'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:00:39'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:00:39'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:00:39'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:00:39'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:00:39'!
FAILURE!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:00:48' prior: 50332023!
test05

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #North.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: #West)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:00:50'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:00:50'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:00:50'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:00:50'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:00:50'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:00:50'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:01:08' prior: 50332047!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	instructions first = $l ifTrue:  [direction := #West].! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:01:10'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:01:10'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:01:10'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:01:10'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:01:10'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:02:38'!
test06

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: #East.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: #North)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:02:40'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:02:40'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:02:40'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:02:40'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:02:40'!
PASSED!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:02:40'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:02:40'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:05:05' prior: 50332099!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	instructions first = $l ifTrue:  [direction = #East ifTrue: [direction := #North] 
										     ifFalse: [direction := #West]].! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:05:07'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:05:07'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:05:07'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:05:07'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:05:07'!
PASSED!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:05:07'!
PASSED!

Object subclass: #CardinalDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #CardinalDirection category: 'MarsRovers' stamp: 'h 10/7/2023 19:07:47'!
Object subclass: #CardinalDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

CardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #North category: 'MarsRovers' stamp: 'h 10/7/2023 19:08:28'!
CardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

CardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #West category: 'MarsRovers' stamp: 'h 10/7/2023 19:08:33'!
CardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

CardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #East category: 'MarsRovers' stamp: 'h 10/7/2023 19:08:37'!
CardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:11:56' prior: 50332150!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	
	instructions first = $l ifTrue: [direction cardinalInTheLeft].
	
	"instructions first = $l ifTrue:  [direction = #East ifTrue: [direction := #North] 
										     ifFalse: [direction := #West]]."! !
!East methodsFor: 'no messages' stamp: 'h 10/7/2023 19:13:39'!
cardinalInTheLeft

	^North! !
!North methodsFor: 'no messages' stamp: 'h 10/7/2023 19:13:53'!
cardinalInTheLeft

	^West! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:15:38' prior: 50331672!
test01

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: ''. 
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!classDefinition: #South category: 'MarsRovers' stamp: 'h 10/7/2023 19:16:08'!
CardinalDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:15:58' prior: 50331743!
test02RoversWithDiferentStartingPositionAndDirection

	|rovers|
	
	rovers := Rovers atPosition: 1@0 withDirection: South new.
	
	rovers processInstructions: ''. 
	
	self deny: (rovers isAt: 0@0 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:16:19' prior: 50331825!
test03

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'f'. 
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:16:25' prior: 50332004!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@-1 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:16:34' prior: 50332075!
test05

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: West new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:16:42' prior: 50332124!
test06

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:16:43'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:16:44'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:16:44'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:16:44'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:16:44'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:16:44'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:16:53'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:17:30' prior: 50332223!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	
	instructions first = $l ifTrue: [direction := direction cardinalInTheLeft].
	
	"instructions first = $l ifTrue:  [direction = #East ifTrue: [direction := #North] 
										     ifFalse: [direction := #West]]."! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:17:34'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:17:34'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:17:34'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:17:34'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:17:34'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:17:34'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:17:50'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:17:50'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:17:50'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:17:50'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:17:50'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:17:50'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:17:52'!
FAILURE!
!North methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:18:42' prior: 50332242!
cardinalInTheLeft

	^West new! !
!East methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:18:48' prior: 50332239!
cardinalInTheLeft

	^North new! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:18:55'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:18:55'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:18:55'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:18:55'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:18:56'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:18:56'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:19:04'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:19:04'!
FAILURE!

rovers!

rovers!

posibleDirection!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:19:46'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:19:46'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:19:46'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:19:46'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:19:46'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:19:47'!
FAILURE!

direction!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:20:04'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:20:10'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:20:10'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:21:33'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:21:33'!
FAILURE!

posibleDirection = direction!

North new = North new!
!Rovers methodsFor: 'test' stamp: 'h 10/7/2023 19:23:23' prior: 50331789!
isAt: posiblePosition withDirection: posibleDirection
	
	^position = posiblePosition and: [posibleDirection isKindOf: direction ]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:23:27'!
FAILURE!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:23:27'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:23:27'!
FAILURE!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:23:27'!
FAILURE!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:23:27'!
FAILURE!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:23:27'!
FAILURE!
!Rovers methodsFor: 'test' stamp: 'h 10/7/2023 19:23:39' prior: 50332436!
isAt: posiblePosition withDirection: posibleDirection
	
	^position = posiblePosition and: [posibleDirection class = direction class ]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:23:41'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:23:41'!
PASSED!

!testRun: #MarsRoversTests #test03 stamp: 'h 10/7/2023 19:23:41'!
PASSED!

!testRun: #MarsRoversTests #test04 stamp: 'h 10/7/2023 19:23:41'!
PASSED!

!testRun: #MarsRoversTests #test05 stamp: 'h 10/7/2023 19:23:41'!
PASSED!

!testRun: #MarsRoversTests #test06 stamp: 'h 10/7/2023 19:23:41'!
PASSED!
!South methodsFor: 'no messages' stamp: 'h 10/7/2023 19:25:01'!
cardinalInTheLeft

	^East new! !
!West methodsFor: 'no messages' stamp: 'h 10/7/2023 19:25:11'!
cardinalInTheLeft

	^South new! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:26:07'!
test03RoversCanMoveForward

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'f'. 
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test03 stamp: 'h 10/7/2023 19:26:08'!
test03

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'f'. 
	
	self assert: (rovers isAt: 0@1 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:26:19'!
test04RoversCanMoveBackwards

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@-1 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test04 stamp: 'h 10/7/2023 19:26:19'!
test04

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'b'.
	
	self assert: (rovers isAt: 0@-1 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:26:41'!
test05RoversCanRotateToTheLeft

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: West new)! !

!methodRemoval: MarsRoversTests #test05 stamp: 'h 10/7/2023 19:26:41'!
test05

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: West new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:27:13'!
test06RoversCanRotateToTheLeftWithDiferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test06 stamp: 'h 10/7/2023 19:27:13'!
test06

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:28:10'!
test07RoversCanRotateToTheRight

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: East new)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/7/2023 19:28:19'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/7/2023 19:28:19'!
FAILURE!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/7/2023 19:28:19'!
FAILURE!
!North methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:28:29'!
cardinalInTheRight

	^East new! !
!Rovers methodsFor: 'process' stamp: 'h 10/7/2023 19:28:56' prior: 50332326!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [position := position x @ (position y -1)].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	
	instructions first = $l ifTrue: [direction := direction cardinalInTheLeft].
	instructions first = $r ifTrue: [direction := direction cardinalInTheRight].
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/7/2023 19:28:59'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/7/2023 19:28:59'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:29:24'!
test07RoversCanRotateToTheRightWithDifferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: West new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:29:25'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:29:25'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/7/2023 19:29:25'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/7/2023 19:29:25'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/7/2023 19:29:26'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/7/2023 19:29:26'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/7/2023 19:29:26'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/7/2023 19:29:26'!
ERROR!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/7/2023 19:29:26'!
ERROR!
!South methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:29:45'!
cardinalInTheRight

	^West new! !
!West methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:30:02'!
cardinalInTheRight

	^North new! !
!East methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:30:10'!
cardinalInTheRight

	^South new! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:30:22'!
test08RoversCanRotateToTheRightWithDifferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: West new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test07RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/7/2023 19:30:23'!
test07RoversCanRotateToTheRightWithDifferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: West new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/7/2023 19:30:24'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/7/2023 19:30:24'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/7/2023 19:30:24'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/7/2023 19:30:24'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/7/2023 19:30:24'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/7/2023 19:30:25'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/7/2023 19:30:25'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/7/2023 19:30:25'!
PASSED!
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:32:34'!
cardinalInTheLeft

	self subclassResponsibility! !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'h 10/7/2023 19:32:42'!
cardinalInTheRight

	self subclassResponsibility! !

----SNAPSHOT----(7 October 2023 19:33:16) CuisUniversity-5981.image priorSource: 10197292!

----QUIT----(7 October 2023 19:38:33) CuisUniversity-5981.image priorSource: 34835!

----STARTUP---- (8 October 2023 21:37:42) as C:\Users\Intekio\Desktop\windows64\CuisUniversity-5981.image!

!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:00'!
moveBackwards

	^ position := position x @ (position y -1)! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:00' prior: 50332595!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [self moveBackwards].
	instructions first = $f ifTrue:  [position := position x @ (position y +1)].
	
	instructions first = $l ifTrue: [direction := direction cardinalInTheLeft].
	instructions first = $r ifTrue: [direction := direction cardinalInTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:06'!
moveForward

	^ position := position x @ (position y +1)! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:06' prior: 50332753!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [self moveBackwards].
	instructions first = $f ifTrue:  [self moveForward].
	
	instructions first = $l ifTrue: [direction := direction cardinalInTheLeft].
	instructions first = $r ifTrue: [direction := direction cardinalInTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:17'!
rotateToTheLeft

	^ direction := direction cardinalInTheLeft! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:17' prior: 50332772!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [self moveBackwards].
	instructions first = $f ifTrue:  [self moveForward].
	
	instructions first = $l ifTrue: [self rotateToTheLeft].
	instructions first = $r ifTrue: [direction := direction cardinalInTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:34'!
rotateToTheRight

	^ direction := direction cardinalInTheRight! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:38:34' prior: 50332790!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions first = $b ifTrue: [self moveBackwards].
	instructions first = $f ifTrue:  [self moveForward].
	
	instructions first = $l ifTrue: [self rotateToTheLeft].
	instructions first = $r ifTrue: [self rotateToTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:39:21'!
isMoveBackwardsInstruction: anInstruction

	^ anInstruction first = $b! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:39:21' prior: 50332808!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	(self isMoveBackwardsInstruction: instructions) ifTrue: [self moveBackwards].
	instructions first = $f ifTrue:  [self moveForward].
	
	instructions first = $l ifTrue: [self rotateToTheLeft].
	instructions first = $r ifTrue: [self rotateToTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:39:41'!
isMoveForwardInstruction: anInstruction

	^ anInstruction first = $f! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:39:41' prior: 50332825!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	(self isMoveBackwardsInstruction: instructions) ifTrue: [self moveBackwards].
	(self isMoveForwardInstruction: instructions) ifTrue:  [self moveForward].
	
	instructions first = $l ifTrue: [self rotateToTheLeft].
	instructions first = $r ifTrue: [self rotateToTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:40:04'!
isRotateLeftInstruction: anInstruction

	^ anInstruction first = $l! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:40:04' prior: 50332843!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	(self isMoveBackwardsInstruction: instructions) ifTrue: [self moveBackwards].
	(self isMoveForwardInstruction: instructions) ifTrue:  [self moveForward].
	
	(self isRotateLeftInstruction: instructions) ifTrue: [self rotateToTheLeft].
	instructions first = $r ifTrue: [self rotateToTheRight].
	! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:40:20'!
isRotateRightInstruction: anInstruction

	^ anInstruction first = $r! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:40:20' prior: 50332861!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	(self isMoveBackwardsInstruction: instructions) ifTrue: [self moveBackwards].
	(self isMoveForwardInstruction: instructions) ifTrue:  [self moveForward].
	
	(self isRotateLeftInstruction: instructions) ifTrue: [self rotateToTheLeft].
	(self isRotateRightInstruction: instructions) ifTrue: [self rotateToTheRight].
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:40:56'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:40:56'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:40:56'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:40:57'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:40:57'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:40:57'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:40:57'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:40:57'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:42:37'!
test09RoversCanProcessMultipleInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ffb'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:43:16' prior: 50332921!
test09RoversCanProcessMultipleInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ff'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:43:22'!
test09RoversCanProcessMultipleSameInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ff'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test09RoversCanProcessMultipleInstructions stamp: 'h 10/8/2023 21:43:22'!
test09RoversCanProcessMultipleInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ff'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)!
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:44:09' prior: 50332880!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	(self isMoveBackwardsInstruction: instructions) ifTrue: [instructions do: [:anInstruction|self moveBackwards]].
	(self isMoveForwardInstruction: instructions) ifTrue:  [instructions do: [:anInstruction|self moveForward]].
	
	(self isRotateLeftInstruction: instructions) ifTrue: [instructions do: [:anInstruction|self rotateToTheLeft]].
	(self isRotateRightInstruction: instructions) ifTrue: [instructions do: [:anInstruction|self rotateToTheRight]].
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:44:10'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:44:11'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:44:11'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:44:11'!
FAILURE!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:44:17' prior: 50332941!
test09RoversCanProcessMultipleSameInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ff'.
	
	self assert: (rovers isAt: 0@2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:44:19'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:44:19'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:44:19'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:44:20'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:44:20'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:44:20'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:44:20'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:44:20'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:44:20'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:44:28'!
test10RoversCanProcessMultipleDifferentInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ff'.
	
	self assert: (rovers isAt: 0@2 withDirection: North new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:44:37' prior: 50333053!
test10RoversCanProcessMultipleDifferentInstructions

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'ffb'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:45:37' prior: 50332961!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:anInstruction | 
		(self isMoveBackwardsInstruction: instructions) ifTrue: [self moveBackwards].
		(self isMoveForwardInstruction: instructions) ifTrue:  [self moveForward].
	
		(self isRotateLeftInstruction: instructions) ifTrue: [self rotateToTheLeft].
		(self isRotateRightInstruction: instructions) ifTrue: [self rotateToTheRight].
		]
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:45:40'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:45:40'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:45:41'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:45:41'!
FAILURE!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:45:41'!
FAILURE!
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:46:28' prior: 50332820!
isMoveBackwardsInstruction: anInstruction

	^ anInstruction = $b! !
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:46:32' prior: 50332838!
isMoveForwardInstruction: anInstruction

	^ anInstruction = $f! !
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:46:35' prior: 50332856!
isRotateLeftInstruction: anInstruction

	^ anInstruction = $l! !
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:46:38' prior: 50332875!
isRotateRightInstruction: anInstruction

	^ anInstruction = $r! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:46:40'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:46:40'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:46:40'!
FAILURE!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:46:40'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:47:25' prior: 50333074!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:anInstruction | 
		(self isMoveBackwardsInstruction: anInstruction ) ifTrue: [self moveBackwards].
		(self isMoveForwardInstruction: anInstruction) ifTrue:  [self moveForward].
	
		(self isRotateLeftInstruction: anInstruction) ifTrue: [self rotateToTheLeft].
		(self isRotateRightInstruction: anInstruction) ifTrue: [self rotateToTheRight].
		]
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:47:27'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:47:27'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:48:17' prior: 50333181!
processInstructions: instructions
	
	instructions do: [:anInstruction | 
		(self isMoveBackwardsInstruction: anInstruction ) ifTrue: [self moveBackwards].
		(self isMoveForwardInstruction: anInstruction) ifTrue:  [self moveForward].
	
		(self isRotateLeftInstruction: anInstruction) ifTrue: [self rotateToTheLeft].
		(self isRotateRightInstruction: anInstruction) ifTrue: [self rotateToTheRight].
		]
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:48:18'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:48:18'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:48:18'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:48:19'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:48:19'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'h 10/8/2023 21:48:54'!
test11RoversStopsProcessingAfterInvalidInstruction

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'fjb'.
	
	self assert: (rovers isAt: 0@1 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:48:56'!
PASSED!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:48:56'!
FAILURE!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:48:56'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'h 10/8/2023 21:50:33' prior: 50333231!
processInstructions: instructions
	
	instructions do: [:anInstruction | 
		(self isInvalidInstruction: anInstruction) ifTrue: [^self].
		
		(self isMoveBackwardsInstruction: anInstruction ) ifTrue: [self moveBackwards].
		(self isMoveForwardInstruction: anInstruction) ifTrue:  [self moveForward].
		(self isRotateLeftInstruction: anInstruction) ifTrue: [self rotateToTheLeft].
		(self isRotateRightInstruction: anInstruction) ifTrue: [self rotateToTheRight].
		]
	! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:50:42'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:50:42'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:50:42'!
ERROR!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:50:48'!
ERROR!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:50:48'!
ERROR!
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:50:54'!
isInvalidInstruction: anInstruction 
	self shouldBeImplemented.! !
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:51:55' prior: 50333392!
isInvalidInstruction: anInstruction 
	^(anInstruction = $b) not and: [(anInstruction = $f) and:[(anInstruction = $l) and: [(anInstruction = $r)]]]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:51:58'!
PASSED!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:51:58'!
FAILURE!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:51:58'!
FAILURE!

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:52:33'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:52:34'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:52:34'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:52:34'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:52:34'!
PASSED!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:52:34'!
FAILURE!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:52:34'!
FAILURE!

rovers!

anInstruction!
!Rovers methodsFor: 'test' stamp: 'h 10/8/2023 21:53:50' prior: 50333397!
isInvalidInstruction: anInstruction 
	^(anInstruction = $b) not and: [(anInstruction = $f)not 
		and:[(anInstruction = $l)not and: [(anInstruction = $r)not]]]! !

!testRun: #MarsRoversTests #test01 stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'h 10/8/2023 21:53:51'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'h 10/8/2023 21:53:52'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'h 10/8/2023 21:53:52'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanProcessMultipleSameInstructions stamp: 'h 10/8/2023 21:53:52'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanProcessMultipleDifferentInstructions stamp: 'h 10/8/2023 21:53:52'!
PASSED!

!testRun: #MarsRoversTests #test11RoversStopsProcessingAfterInvalidInstruction stamp: 'h 10/8/2023 21:53:52'!
PASSED!

----STARTUP---- (9 October 2023 10:27:12) as C:\Users\Manuel Urkovich\Facu\Inge1\cuis\windows64\CuisUniversity-5981.image!


!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:28:05'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'm u 10/9/2023 10:28:05'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:31:59'!
test08RoversCanProcessMultipleCommands

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'rfflbb'.
	
	self assert: (rovers isAt: 2@-2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanProcessMultipleCommands stamp: 'm u 10/9/2023 10:32:01'!
FAILURE!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'm u 10/9/2023 10:32:01'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanProcessMultipleCommands stamp: 'm u 10/9/2023 10:32:01'!
FAILURE!

!methodRemoval: MarsRoversTests #test08RoversCanProcessMultipleCommands stamp: 'm u 10/9/2023 10:35:24'!
test08RoversCanProcessMultipleCommands

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'rfflbb'.
	
	self assert: (rovers isAt: 2@-2 withDirection: North new)!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'm u 10/9/2023 10:35:26'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:35:45'!
test08RoversCanRotateToTheRightWhenFacingWest

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: West new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test08RoversCanRotateToTheRightWithDifferentDirection stamp: 'm u 10/9/2023 10:35:45'!
test08RoversCanRotateToTheRightWithDifferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: West new.
	
	rovers processInstructions: 'r'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:35:54'!
test06RoversCanRotateToTheLeftWhenFacingEast

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test06RoversCanRotateToTheLeftWithDiferentDirection stamp: 'm u 10/9/2023 10:35:54'!
test06RoversCanRotateToTheLeftWithDiferentDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'l'.
	
	self assert: (rovers isAt: 0@0 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:37:11'!
test08RoversCanRotateAndMoveWhenFacingNorth

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: East new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:37:16'!
test09RoversCanRotateAndMoveWhenFacingNorth

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: East new)! !

!methodRemoval: MarsRoversTests #test08RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:37:16'!
test08RoversCanRotateAndMoveWhenFacingNorth

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: East new)!

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:37:19'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:37:19'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:37:19'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:38:15' prior: 50332595!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $b ifTrue: [position := position x @ (position y -1)].
		instruction = $f ifTrue:  [position := position x @ (position y +1)].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:38:16'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:38:16'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:38:16'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:39:26' prior: 50333723!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction = North]) ifTrue:  [position := position x @ (position y +1)].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:39:27'!
FAILURE!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:39:27'!
FAILURE!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:39:27'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:39:27'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:39:52' prior: 50333772!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:39:54'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:39:54'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:39:54'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:41:01' prior: 50333819!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y +1].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:41:02'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:41:02'!
FAILURE!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:41:02'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:41:18' prior: 50333870!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:41:20'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:41:20'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:41:41'!
test09RoversCanRotateAndMoveWhenFacingEast

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: South new)! !
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:41:47'!
test10RoversCanRotateAndMoveWhenFacingEast

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: South new)! !

!methodRemoval: MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:41:47'!
test09RoversCanRotateAndMoveWhenFacingEast

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 1@0 withDirection: South new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:42:13' prior: 50333992!
test10RoversCanRotateAndMoveWhenFacingEast

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: East new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: 0@-1 withDirection: South new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:42:15'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:42:15'!
FAILURE!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:42:15'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:42:39' prior: 50333928!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y].
		(instruction = $b and: [direction class = South]) ifTrue: [position := position x @ (position y +1)].
		(instruction = $f and: [direction class = South]) ifTrue:  [position := position x @ (position y -1)].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:42:41'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:42:42'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:42:42'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:43:19'!
test11RoversCanRotateAndMoveWhenFacingSouth

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	rovers processInstructions: 'rffb'.
	
	self assert: (rovers isAt: -1@0 withDirection: West new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:43:24'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:43:24'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:43:24'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:43:25'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:43:25'!
FAILURE!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:43:25'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:43:55' prior: 50334059!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := position x @ (position y -1)].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y].
		(instruction = $b and: [direction class = South]) ifTrue: [position := position x @ (position y +1)].
		(instruction = $f and: [direction class = South]) ifTrue:  [position := position x @ (position y -1)].
		(instruction = $b and: [direction class = West]) ifTrue: [position := (position x +1 ) @ position y].
		(instruction = $f and: [direction class = West]) ifTrue:  [position := (position x -1 ) @ position y].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:43:56'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:43:57'!
PASSED!
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:47:11'!
forwardPositionForCurrentPosition: aPosition! !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:47:17'!
backwardPositionForCurrentPosition: aPosition! !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:47:22' prior: 50334252!
backwardPositionForCurrentPosition: aPosition
	self subclassResponsibility ! !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:47:27' prior: 50334247!
forwardPositionForCurrentPosition: aPosition
	self subclassResponsibility ! !
!North methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:48:02' overrides: 50334263!
forwardPositionForCurrentPosition: aPosition
	^aPosition x @ (aPosition y + 1)! !
!North methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:48:12' overrides: 50334257!
backwardPositionForCurrentPosition: aPosition
	^aPosition x @ (aPosition y - 1)! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:48:59' prior: 50334173!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := direction backwardPositionForCurrentPosition: position].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := position x @ (position y +1)].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y].
		(instruction = $b and: [direction class = South]) ifTrue: [position := position x @ (position y +1)].
		(instruction = $f and: [direction class = South]) ifTrue:  [position := position x @ (position y -1)].
		(instruction = $b and: [direction class = West]) ifTrue: [position := (position x +1 ) @ position y].
		(instruction = $f and: [direction class = West]) ifTrue:  [position := (position x -1 ) @ position y].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:49:01'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:49:01'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:49:19' prior: 50334281!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(instruction = $b and: [direction class = North]) ifTrue: [position := direction backwardPositionForCurrentPosition: position].
		(instruction = $f and: [direction class = North]) ifTrue:  [position := direction forwardPositionForCurrentPosition: position].
		(instruction = $b and: [direction class = East]) ifTrue: [position := (position x -1 ) @ position y].
		(instruction = $f and: [direction class = East]) ifTrue:  [position := (position x +1 ) @ position y].
		(instruction = $b and: [direction class = South]) ifTrue: [position := position x @ (position y +1)].
		(instruction = $f and: [direction class = South]) ifTrue:  [position := position x @ (position y -1)].
		(instruction = $b and: [direction class = West]) ifTrue: [position := (position x +1 ) @ position y].
		(instruction = $f and: [direction class = West]) ifTrue:  [position := (position x -1 ) @ position y].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:49:21'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:49:21'!
PASSED!
!East methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:50:17' overrides: 50334263!
forwardPositionForCurrentPosition: aPosition
	^(aPosition x + 1) @ aPosition y! !
!East methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:50:25' overrides: 50334257!
backwardPositionForCurrentPosition: aPosition
	^(aPosition x - 1) @ aPosition y! !
!South methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:50:49' overrides: 50334263!
forwardPositionForCurrentPosition: aPosition
	^aPosition x @ (aPosition y -1)! !
!South methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:50:57' overrides: 50334257!
backwardPositionForCurrentPosition: aPosition
	^aPosition x @ (aPosition y +1)! !
!West methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:51:20' overrides: 50334263!
forwardPositionForCurrentPosition: aPosition
	^(aPosition x - 1) @ aPosition y! !
!West methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:51:32' overrides: 50334257!
backwardPositionForCurrentPosition: aPosition
	^(aPosition x + 1) @ aPosition y! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:51:35'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:51:35'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:52:27' prior: 50334356!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [position := direction forwardPositionForCurrentPosition: position].
		instruction = $b ifTrue: [position := direction backwardPositionForCurrentPosition: position].
		
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:52:28'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:52:29'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:52:29'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:52:33' prior: 50334504!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [position := direction forwardPositionForCurrentPosition: position].
		instruction = $b ifTrue: [position := direction backwardPositionForCurrentPosition: position].
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:52:34'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:52:34'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:52:55'!
moveForward

	^ position := direction forwardPositionForCurrentPosition: position! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:52:55' prior: 50334558!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [position := direction backwardPositionForCurrentPosition: position].
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:02'!
moveBackwards

	^ position := direction backwardPositionForCurrentPosition: position! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:02' prior: 50334617!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [direction := direction cardinalInTheLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:08'!
rotateLeft

	^ direction := direction cardinalInTheLeft! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:09' prior: 50334638!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [direction := direction cardinalInTheRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:16'!
rotateRight

	^ direction := direction cardinalInTheRight! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:53:16' prior: 50334657!
processInstructions: instructions
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:53:18'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:53:18'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 10:54:44'!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	rovers processInstructions: 'fffbrrxr'.
	
	self assert: (rovers isAt: -2@0 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:54:45'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:54:45'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:54:45'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:54:46'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 10:54:46'!
FAILURE!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 10:54:46'!
FAILURE!

----End fileIn of C:\Users\Manuel Urkovich\Facu\Inge1\cuis\windows64\Packages\TerseGuide.pck.st----!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 10:59:55' prior: 50334675!
processInstructions: instructions
	|validCommands|
	validCommands := 'fblr'.
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		(validCommands includes: instruction) ifFalse: [self error: 'comando invalido'].
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 10:59:57'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 10:59:57'!
ERROR!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 10:59:57'!
ERROR!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 11:00:42' prior: 50334724!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	self should: [rovers processInstructions: 'fffbrrxr'] raise: Error.
	
	self assert: (rovers isAt: -2@0 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:00:44'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:00:44'!
FAILURE!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:00:44'!
FAILURE!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 11:01:18' prior: 50337758!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	self should: [rovers processInstructions: 'fffbrrxr'] raise: Error.
	
	self assert: (rovers isAt: 0@-2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:01:20'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:01:20'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:02:04'!
delete: validCommands instruction: instruction

	^ (validCommands includes: instruction) ifFalse: [self error: 'comando invalido']! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:02:04' prior: 50337697!
processInstructions: instructions
	|validCommands|
	validCommands := 'fblr'.
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		self delete: validCommands instruction: instruction.
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:02:06'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:02:07'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:02:07'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:02:07'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:02:07'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:03:05'!
assertInstructionIsValid: anInstruction
	^ (self class validCommands includes: anInstruction) ifFalse: [self error: 'comando invalido']! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:03:07'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:03:07'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:03:23' prior: 50337870!
processInstructions: instructions
	|validCommands|
	validCommands := 'fblr'.
	
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:03:33' prior: 50337972!
processInstructions: instructions
	instructions isEmpty ifTrue: [^self].
	
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:03:34'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:03:34'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:03:34'!
ERROR!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:03:34'!
FAILURE!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:03:40'!
ERROR!
!Rovers class methodsFor: 'instance creation' stamp: 'm u 10/9/2023 11:04:08'!
validInstructions
	^'fbrl'! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:04:20' prior: 50337925!
assertInstructionIsValid: anInstruction
	^ (self class validInstructions includes: anInstruction) ifFalse: [self error: 'comando invalido']! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:04:21'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:04:22'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:04:22'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:04:22'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:04:22'!
PASSED!
!Rovers class methodsFor: 'instance creation' stamp: 'm u 10/9/2023 11:04:50'!
invalidInstructionMessage
	^'Invalid instruction'! !

!methodRemoval: Rovers #delete:instruction: stamp: 'm u 10/9/2023 11:05:11'!
delete: validCommands instruction: instruction

	^ (validCommands includes: instruction) ifFalse: [self error: 'comando invalido']!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 11:05:34' prior: 50338049!
assertInstructionIsValid: anInstruction
	^ (self class validInstructions includes: anInstruction) ifFalse: [self error: self class invalidInstructionMessage]! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:05:36'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:05:36'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 11:06:16' prior: 50337813!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	self 
		should: [rovers processInstructions: 'fffbrrxr'] 
		raise: Error.
	
	self assert: (rovers isAt: 0@-2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:06:17'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:06:17'!
PASSED!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 11:07:36' prior: 50338156!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	
	self 
		should: [rovers processInstructions: 'fffbrrxr'] 
		raise: Error
		withExceptionDo: [:error | self assert: error messageText equals: Rovers invalidInstructionMessage].
	
	self assert: (rovers isAt: 0@-2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:07:37'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:07:38'!
PASSED!

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 11:08:33'!
PASSED!

----SNAPSHOT----(9 October 2023 11:08:35) CuisUniversity-5981.image priorSource: 34927!

----SNAPSHOT----(9 October 2023 11:08:44) CuisUniversity-5981.image priorSource: 212796!

----STARTUP---- (9 October 2023 15:51:13) as C:\Users\Manuel Urkovich\Facu\Inge1\cuis\windows64\CuisUniversity-5981.image!


!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 16:04:26'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 16:04:26'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:04:26'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:04:26'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:04:27'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:04:27'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:04:31' prior: 50337988!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		instruction = $f ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:04:32'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:04:32'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:04:52'!
isMoveForwardInstruction: instruction

	^ instruction = $f! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:04:52' prior: 50338350!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		instruction = $b ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:08'!
isMoveBackwardsInstruction: anInstruction

	^ anInstruction = $b! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:08' prior: 50338407!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		instruction = $l ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:23'!
isRotateLeftInstruction: anInstruction

	^ anInstruction = $l! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:23' prior: 50338425!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		instruction = $r ifTrue: [self rotateRight].
	].
	
	
	! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:38'!
isRotateRightInstruction: instruction

	^ instruction = $r! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:38' prior: 50338444!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01 stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:05:40'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:05:40'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:05:47' prior: 50338464!
processInstructions: instructions
	instructions do: [:instruction |
		self assertInstructionIsValid: instruction.
		
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!methodRemoval: MarsRoversTests #test02RoversWithDiferentStartingPositionAndDirection stamp: 'm u 10/9/2023 16:06:28'!
test02RoversWithDiferentStartingPositionAndDirection

	|rovers|
	
	rovers := Rovers atPosition: 1@0 withDirection: South new.
	
	rovers processInstructions: ''. 
	
	self deny: (rovers isAt: 0@0 withDirection: North new)!
!MarsRoversTests methodsFor: 'as yet unclassified' stamp: 'm u 10/9/2023 16:06:50'!
test01RoversStartsWithPositionAndDirection

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: ''. 
	
	self assert: (rovers isAt: 0@0 withDirection: North new)! !

!methodRemoval: MarsRoversTests #test01 stamp: 'm u 10/9/2023 16:06:50'!
test01

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: North new.
	
	rovers processInstructions: ''. 
	
	self assert: (rovers isAt: 0@0 withDirection: North new)!

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:06:51'!
PASSED!

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:07:04'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:07:04'!
PASSED!
!MarsRoversTests methodsFor: 'tests' stamp: 'm u 10/9/2023 16:07:39' prior: 50338207!
test12RoversStopsAfterInvalidCommand

	|rovers|
	
	rovers := Rovers atPosition: 0@0 withDirection: South new.
	rovers processInstructions: 'fffbrrxr'.
	"self 
		should: [rovers processInstructions: 'fffbrrxr'] 
		raise: Error
		withExceptionDo: [:error | self assert: error messageText equals: Rovers invalidInstructionMessage]."
	
	self assert: (rovers isAt: 0@-2 withDirection: North new)! !

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:07:40'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:07:40'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:07:41'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:07:41'!
ERROR!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:07:41'!
ERROR!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:09:12' prior: 50338520!
processInstructions: instructions
	instructions do: [:instruction |
		(self class validInstructions includes: instruction) 
			ifFalse: [^self].
		
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:09:14'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:09:14'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:09:20' prior: 50338695!
processInstructions: instructions
	instructions do: [:instruction |
		"(self class validInstructions includes: instruction) 
			ifFalse: [^self]."
		
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:09:21'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:09:21'!
FAILURE!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:09:21'!
FAILURE!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:09:26' prior: 50338750!
processInstructions: instructions
	instructions do: [:instruction |
		(self class validInstructions includes: instruction) 
			ifFalse: [^self].
		
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:09:27'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:09:27'!
PASSED!
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:09:44'!
isNotValidInstruction: instruction

	^ self class validInstructions includes: instruction! !
!Rovers methodsFor: 'process' stamp: 'm u 10/9/2023 16:09:44' prior: 50338808!
processInstructions: instructions
	instructions do: [:instruction |
		(self isNotValidInstruction: instruction) 
			ifFalse: [^self].
		
		(self isMoveForwardInstruction: instruction) ifTrue: [self moveForward].
		(self isMoveBackwardsInstruction: instruction) ifTrue: [self moveBackwards].
		(self isRotateLeftInstruction: instruction) ifTrue: [self rotateLeft].
		(self isRotateRightInstruction: instruction) ifTrue: [self rotateRight].
	].
	
	
	! !

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:09:47'!
PASSED!

----SNAPSHOT----(9 October 2023 16:09:58) CuisUniversity-5981.image priorSource: 212885!

!testRun: #MarsRoversTests #test01RoversStartsWithPositionAndDirection stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test03RoversCanMoveForward stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test04RoversCanMoveBackwards stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test05RoversCanRotateToTheLeft stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test06RoversCanRotateToTheLeftWhenFacingEast stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test07RoversCanRotateToTheRight stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test08RoversCanRotateToTheRightWhenFacingWest stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test09RoversCanRotateAndMoveWhenFacingNorth stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test10RoversCanRotateAndMoveWhenFacingEast stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test11RoversCanRotateAndMoveWhenFacingSouth stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

!testRun: #MarsRoversTests #test12RoversStopsAfterInvalidCommand stamp: 'm u 10/9/2023 16:10:31'!
PASSED!

----SNAPSHOT----(9 October 2023 16:10:35) CuisUniversity-5981.image priorSource: 232682!

----SNAPSHOT----(9 October 2023 16:10:44) CuisUniversity-5981.image priorSource: 233963!